{"version":3,"sources":["components/NavigationBar/NavigationBar.js","components/LoginCard/LoginCard.js","components/TextInput/TextInput.js","components/AutoCompleteText/AutoCompleteText.js","scripts/hyperledger.js","container/Login/Login.js","components/ProgressBar/ProgressBar.js","container/Aircraft/Aircraft.js","App.js","serviceWorker.js","index.js"],"names":["NavigationBar","connected","history","useHistory","location","useLocation","AppBar","position","Toolbar","fontSize","Typography","variant","className","Box","px","pathname","Button","color","onClick","push","console","log","Tooltip","title","LoginCard","heading","disabled","buttonText","toggleClick","children","mt","mx","Card","raised","CardHeader","CardContent","CardActions","mb","fullWidth","TextInput","props","my","TextField","AutoCompleteText","options","optionLabel","freeSolo","onInputChange","id","Autocomplete","getOptionLabel","renderInput","params","address","getCompanies","a","fetch","method","res","json","data","registerUser","headers","body","Login","companies","roles","React","useState","register","setRegister","username","password","role","company","userPass","setUserPass","verified","newUser","setNewUser","validate","setValidate","loginHandle","registerHandle","onChangeUserPass","event","key","target","value","prev","onChangeNew","replace","autocompleteOnChange","handler","obj","innerText","toLowerCase","wordCapitalization","phrase","split","map","word","charAt","toUpperCase","slice","join","Object","values","every","val","label","onChange","type","onBlur","error","helperText","list","ProgressBar","start","end","current","setValue","setTimeout","Math","min","pr","LinearProgress","classes","root","TabPanel","index","other","component","hidden","aria-labelledby","p","useStyles","makeStyles","theme","tabs","borderRight","palette","divider","text","main","minWidth","TabWrapper","condition","Aircraft","isMobile","setIsMobile","setData","useEffect","handleResize","window","innerWidth","addEventListener","_","removeEventListener","Array","fill","aircraft","tailNumber","image","Tabs","orientation","newValue","Tab","a11yProps","m","src","alt","round","random","App","setConnected","setList","then","e","Fragment","path","Boolean","hostname","match","darkTheme","createMuiTheme","overrides","MuiFormLabel","ReactDOM","render","ThemeProvider","basename","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.1d7ea304.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  Button,\n  Box,\n  Tooltip\n} from \"@material-ui/core\";\nimport FlightTakeoffIcon from \"@material-ui/icons/FlightTakeoff\";\nimport RssFeedIcon from \"@material-ui/icons/RssFeed\";\nimport \"./NavigationBar.css\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nexport const NavigationBar = ({ connected }) => {\n  const history = useHistory();\n  const location = useLocation();\n  const logout = () => {\n    history.push(\"/\");\n    console.log(\"logout callback\");\n  };\n\n  return (\n    <AppBar position=\"sticky\">\n      <Toolbar>\n        <FlightTakeoffIcon fontSize=\"large\" />\n        <Typography variant=\"h6\" className=\"heading-web\">\n          Airline MRO + Hyperledger Fabric\n        </Typography>\n        <Typography variant=\"h6\" className=\"heading-mobile\">\n          Airline MRO\n        </Typography>\n        <Box px={2}>\n          {location.pathname === \"/aircraft\" && (\n            <Button color=\"inherit\" onClick={logout}>\n              Logout\n            </Button>\n          )}\n        </Box>\n        <Tooltip title={connected ? \"Network Connected\" : \"Not Connected\"}>\n          <RssFeedIcon color={connected ? \"inherit\" : \"secondary\"} />\n        </Tooltip>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default NavigationBar;\n","import React from \"react\";\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  CardActions,\n  Button,\n  Box\n} from \"@material-ui/core\";\nimport \"./LoginCard.css\";\n\nexport const LoginCard = ({\n  heading,\n  onClick,\n  disabled,\n  buttonText,\n  toggleClick,\n  children\n}) => {\n  return (\n    <Box mt={6} mx={5} className=\"loginCard-container\">\n      <Card raised={true} className=\"loginCard-card\">\n        <CardHeader title={heading} className=\"loginCard-center\" />\n        <CardContent className=\"loginCard-content loginCard-center\">\n          {children}\n        </CardContent>\n        <CardActions className=\"loginCard-center\">\n          <Box mb={1}>\n            <Button onClick={toggleClick}>\n              {heading === \"User Login\"\n                ? \"Register New User\"\n                : \"Login Existing User\"}\n            </Button>\n          </Box>\n          <Button\n            fullWidth={true}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={onClick}\n            disabled={disabled}\n          >\n            {buttonText}\n          </Button>\n        </CardActions>\n      </Card>\n    </Box>\n  );\n};\n\nexport default LoginCard;\n","import React from \"react\";\nimport { TextField, Box } from \"@material-ui/core\";\nimport \"./TextInput.css\";\n\nexport const TextInput = ({ ...props }) => {\n  return (\n    <Box my={1} className=\"boxWidth\">\n      <TextField {...props} variant=\"outlined\" fullWidth={true}/>\n    </Box>\n  );\n};\n","import React from \"react\";\nimport { TextInput } from \"../TextInput/TextInput\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport \"./AutoCompleteText.css\"\n\nexport const AutoCompleteText = ({\n  options,\n  optionLabel,\n  freeSolo = false,\n  onInputChange,\n  id,\n  ...props\n}) => {\n  return (\n    <Autocomplete\n      options={options}\n      getOptionLabel={optionLabel}\n      freeSolo={freeSolo}\n      onInputChange={onInputChange}\n      className=\"autoCompleteContainer\"\n      renderInput={params => <TextInput {...params} {...props} />}\n    />\n  );\n};\n","const address = \"https://35.193.103.180:3000/\";\n\nexport const getCompanies = async () => {\n  const res = await fetch(address, {\n    method: \"GET\"\n  });\n  const data = await res.json();\n  return data;\n};\n\nexport const registerUser = async params => {\n  const res = await fetch(address + \"login\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: params\n  });\n  const data = await res.json();\n  return data;\n};\n\nexport default getCompanies;\n","import React from \"react\";\nimport \"./Login.css\";\nimport { LoginCard } from \"../../components/LoginCard/LoginCard\";\nimport { TextInput } from \"../../components/TextInput/TextInput\";\nimport { AutoCompleteText } from \"../../components/AutoCompleteText/AutoCompleteText\";\nimport { useHistory } from \"react-router-dom\";\nimport { registerUser } from \"../../scripts/hyperledger.js\"\n\nexport const Login = ({ companies }) => {\n  const history = useHistory();\n  const roles = [\"Administrator\", \"Maintainer\"];\n  const [register, setRegister] = React.useState(false);\n  const [userPass, setUserPass] = React.useState({\n    username: \"\",\n    password: \"\",\n    role: \"\",\n    company: \"\"\n  });\n\n  const [newUser, setNewUser] = React.useState({\n    username: \"\",\n    password: \"\",\n    verified: \"\",\n    role: \"\",\n    company: \"\"\n  });\n  const [validate, setValidate] = React.useState(false);\n\n  const loginHandle = async () => {\n    console.log(\"login click\");\n    history.push(\"/aircraft\");\n  };\n\n  const registerHandle = async () => {\n    console.log(\"register click\");\n    const data = newUser;\n    delete data.verified; // remove extra key value pair\n    const res = await registerUser(data);\n    console.log(res);\n  };\n\n  const onChangeUserPass = event => {\n    const key = event.target.id;\n    const value = event.target.value;\n    setUserPass(prev => {\n      return { ...prev, [key]: value };\n    });\n  };\n\n  const onChangeNew = event => {\n    const key = event.target.id.replace(\"New\", \"\");\n    const value = event.target.value;\n    setNewUser(prev => {\n      return { ...prev, [key]: value };\n    });\n  };\n\n  const autocompleteOnChange = (event, handler, key, obj) => {\n    let value = event.target.value;\n    if (typeof value === \"number\") {\n      value = event.target.innerText.toLowerCase();\n    }\n    handler(prev => {\n      return { ...prev, [key]: value || \"\" };\n    });\n  };\n\n  const validatePassword = () => {\n    setValidate(newUser.password !== newUser.verified);\n  };\n\n  const wordCapitalization = phrase => {\n    return phrase\n      .split(\" \")\n      .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n      .join(\" \");\n  };\n\n  return (\n    <div className=\"login-container\">\n      {register ? (\n        <LoginCard\n          heading=\"Register New User\"\n          onClick={registerHandle}\n          disabled={!Object.values(newUser).every(val => !!val)}\n          buttonText=\"Register\"\n          toggleClick={() => setRegister(!register)}\n        >\n          <TextInput label=\"Username\" onChange={onChangeNew} id=\"usernameNew\" />\n          <TextInput\n            label=\"Password\"\n            type=\"password\"\n            onChange={onChangeNew}\n            id=\"passwordNew\"\n          />\n          <TextInput\n            label=\"Confirm password\"\n            type=\"password\"\n            onChange={event => {\n              if (validate) {\n                setValidate(false);\n              }\n              onChangeNew(event);\n            }}\n            id=\"verified\"\n            disabled={!newUser.password}\n            onBlur={validatePassword}\n            error={validate}\n            helperText={validate ? \"passwords do not match\" : \"\"}\n          />\n          <AutoCompleteText\n            options={roles}\n            optionLabel={wordCapitalization}\n            label=\"Role\"\n            onInputChange={event => {\n              autocompleteOnChange(event, setNewUser, \"role\", roles);\n            }}\n          />\n          <AutoCompleteText\n            options={companies.list}\n            optionLabel={wordCapitalization}\n            label=\"Company\"\n            freeSolo={newUser.role === \"administrator\"}\n            onInputChange={event => {\n              autocompleteOnChange(\n                event,\n                setNewUser,\n                \"company\",\n                companies.list\n              );\n            }}\n          />\n        </LoginCard>\n      ) : (\n        <LoginCard\n          heading=\"User Login\"\n          onClick={loginHandle}\n          disabled={!Object.values(userPass).every(val => !!val)}\n          buttonText=\"Login\"\n          toggleClick={() => setRegister(!register)}\n        >\n          <TextInput\n            label=\"Username\"\n            onChange={onChangeUserPass}\n            id=\"username\"\n          />\n          <TextInput\n            label=\"Password\"\n            type=\"password\"\n            onChange={onChangeUserPass}\n            id=\"password\"\n          />\n          <AutoCompleteText\n            options={roles}\n            optionLabel={wordCapitalization}\n            label=\"Role\"\n            onInputChange={event => {\n              autocompleteOnChange(event, setUserPass, \"role\", roles);\n            }}\n          />\n          <AutoCompleteText\n            options={companies.list}\n            optionLabel={wordCapitalization}\n            label=\"Company\"\n            onInputChange={event => {\n              autocompleteOnChange(event, setUserPass, \"company\", roles);\n            }}\n          />\n        </LoginCard>\n      )}\n    </div>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport { Box, LinearProgress, Typography } from \"@material-ui/core\";\nimport \"./ProgressBar.css\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport ErrorOutlineIcon from \"@material-ui/icons/ErrorOutline\";\n\nexport const ProgressBar = ({ start, end, current, label }) => {\n  const [value, setValue] = React.useState(0);\n\n  setTimeout(() => {\n    setValue(Math.min(((current - start) / (end - start)) * 100, 100));\n  }, 1000);\n\n  return (\n    <Box className=\"bar-container\">\n      <Box pr={2} className=\"bar-label\">\n        <Typography>{label}</Typography>\n      </Box>\n      <CheckCircleIcon\n        color={value < 75 ? \"primary\" : \"secondary\"}\n        fontSize=\"large\"\n      />\n      <LinearProgress\n        color={value < 75 ? \"primary\" : \"secondary\"}\n        variant=\"determinate\"\n        value={value}\n        classes={{ root: \"bar-indicator\" }}\n      />\n      {value < 95 ? (\n        <ErrorOutlineIcon color=\"disabled\" fontSize=\"large\" />\n      ) : (\n        <ErrorIcon color=\"secondary\" fontSize=\"large\" />\n      )}\n    </Box>\n  );\n};\n\n// \"action\",\"disabled\",\"error\",\"inherit\",\"primary\",\"secondary\"\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Tabs, Tab, Typography, Box, AppBar} from \"@material-ui/core\";\nimport {ProgressBar} from \"../../components/ProgressBar/ProgressBar\";\nimport \"./Aircraft.css\";\n\n//from: https://material-ui.com/components/tabs/\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`vertical-tabpanel-${index}`}\n      aria-labelledby={`vertical-tab-${index}`}\n      className=\"detailContainer\"\n      {...other}\n    >\n      {value === index && <Box p={3} className=\"detailContainer-box\">{children}</Box>}\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `vertical-tab-${index}`,\n    \"aria-controls\": `vertical-tabpanel-${index}`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  tabs: {\n    borderRight: `1px solid ${theme.palette.divider}`,\n    color: theme.palette.text.main,\n    minWidth: \"15%\"\n  }\n}));\n\nconst TabWrapper = ({ condition, children }) =>\n  condition ? (\n    children\n  ) : (\n    <AppBar position=\"static\" color=\"transparent\">\n      {children}\n    </AppBar>\n  );\n\nexport const Aircraft = () => {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n  const [isMobile, setIsMobile] = React.useState(false);\n  const [data, setData] = React.useState([]);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  React.useEffect(() => {\n    function handleResize() {\n      if (window.innerWidth <= 600 && !isMobile) {\n        setIsMobile(true);\n      } else if (window.innerWidth > 600 && isMobile) {\n        setIsMobile(false);\n      }\n    }\n    handleResize();\n    window.addEventListener(\"resize\", handleResize);\n    return _ => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, [isMobile]);\n\n  React.useEffect(() => {\n    setData(\n      new Array(20).fill({\n        aircraft: \"Boeing 787-8 Dreamliner\",\n        tailNumber: \"G-ZBJG\",\n        image: \"https://cdn.jetphotos.com/full/6/27290_1582395615.jpg\",\n        company: \"British Airways\"\n      })\n    );\n  }, []);\n\n  return (\n    <div\n      className={`mainContainer ${\n        !isMobile ? \"horizontalOrient\" : \"verticalOrient\"\n      }`}\n    >\n      <TabWrapper condition={!isMobile}>\n        <Tabs\n          orientation={!isMobile ? \"vertical\" : \"horizontal\"}\n          variant=\"scrollable\"\n          value={value}\n          onChange={handleChange}\n          className={classes.tabs}\n        >\n          {data.map((obj, index) => (\n            <Tab\n              label={`Plane ${index + 1}`}\n              key={`plane${index}`}\n              {...a11yProps(index)}\n            />\n          ))}\n        </Tabs>\n      </TabWrapper>\n      {data.map((obj, index) => (\n        <TabPanel value={value} index={index} key={`aircraft${index}`}>\n          <Box m={1} className=\"panel-header-details\">\n            <Typography variant=\"h2\">{obj.aircraft}</Typography>\n            <Typography variant=\"h6\">{`Tail Number: ${obj.tailNumber}`}</Typography>\n            <Typography variant=\"h6\">{`Company: ${obj.company} ${index+1}`}</Typography>\n          </Box>\n          <Box className=\"panel-header-image\">\n            <img src={obj.image} alt={`${obj.aircraft} ${obj.tailNumber}`}/>\n          </Box>\n          <Box my={1} className=\"panel-content\">\n            <Typography variant=\"h6\">Maintenance Checks</Typography>\n            <ProgressBar start={0} end={10} current={Math.round(Math.random()*10)} label={`A Check Due: ${\"date\"}`}/>\n            <ProgressBar start={0} end={10} current={Math.round(Math.random()*10)} label={`B Check Due: ${\"date\"}`}/>\n            <ProgressBar start={0} end={10} current={Math.round(Math.random()*10)} label={`C Check Due: ${\"date\"}`}/>\n            <ProgressBar start={0} end={10} current={Math.round(Math.random()*10)} label={`D Check Due: ${\"date\"}`}/>\n          </Box>\n          <Box my={1} className=\"panel-content\">\n            <Typography variant=\"h6\">Parts Provenance</Typography>\n          </Box>\n          <Box my={1} className=\"panel-content\">\n            <Typography variant=\"h6\">Maintenance Reports</Typography>\n          </Box>\n        </TabPanel>\n      ))}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { NavigationBar } from \"./components/NavigationBar/NavigationBar\";\nimport { Login } from \"./container/Login/Login\";\nimport { Aircraft } from \"./container/Aircraft/Aircraft\"\nimport { getCompanies } from \"./scripts/hyperledger.js\"\n\nfunction App() {\n  const [connected, setConnected] = React.useState(false);\n  const [list, setList] = React.useState([]);\n  const companies = {list, setList}\n  React.useEffect(() => {\n    //check hyperledger status\n    try {\n      getCompanies().then(res => {\n        companies.setList(res);\n        setConnected(true);\n      });\n    } catch (e) {\n      setConnected(false);\n    }\n  }, [companies]);\n\n  return (\n    <React.Fragment>\n      <NavigationBar connected={connected} />\n      <Switch>\n        <Route path=\"/aircraft\">\n          <Aircraft />\n        </Route>\n        <Route path=\"/\">\n          <Login companies={companies}/>\n        </Route>\n      </Switch>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\n\nconst darkTheme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n    text: {\n      main: \"#fff\",\n    }\n  },\n  overrides: {\n    MuiFormLabel: {\n      root: {\n        \"&$focused\": {\n          color: \"white\"\n        }\n      }\n    }\n  }\n});\n\nReactDOM.render(\n  <ThemeProvider theme={darkTheme}>\n    <Router basename=\"/\">\n      <App />\n    </Router>\n  </ThemeProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}