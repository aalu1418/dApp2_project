{"version":3,"sources":["components/NavigationBar/NavigationBar.js","components/LoginCard/LoginCard.js","components/TextInput/TextInput.js","components/AutoCompleteText/AutoCompleteText.js","scripts/hyperledger.js","scripts/wordManipulation.js","container/Login/Login.js","components/ProgressBar/ProgressBar.js","components/MaintenanceRecordPanel/MaintenanceRecordPanel.js","components/PartProvenance/PartProvenance.js","container/Aircraft/Aircraft.js","App.js","serviceWorker.js","index.js"],"names":["NavigationBar","connected","history","useHistory","location","useLocation","AppBar","position","Toolbar","fontSize","Typography","variant","className","Box","px","pathname","Button","color","onClick","window","sessionStorage","removeItem","push","console","log","Tooltip","title","LoginCard","heading","disabled","buttonText","switchText","toggleClick","children","mt","mx","Card","raised","CardHeader","CardContent","CardActions","mb","fullWidth","TextInput","props","my","TextField","AutoCompleteText","options","optionLabel","freeSolo","onInputChange","id","Autocomplete","getOptionLabel","renderInput","params","address","getCompanies","a","fetch","res","json","data","getUser","postType","method","headers","body","JSON","stringify","output","status","getAircraft","getPart","wordCapitalization","phrase","split","map","word","charAt","toUpperCase","slice","join","Login","companies","userData","types","React","useState","register","setRegister","username","password","type","company","userPass","setUserPass","validatedPass","setValidatedPass","validate","setValidate","apiCalled","setAPIcalled","useEffect","loginHandle","verified","setInfo","user","offline","setItem","jwtToken","registerHandle","onChangeUserPass","event","key","target","value","prev","autocompleteOnChange","handler","obj","innerText","toLowerCase","Object","values","every","val","label","onChange","error","helperText","list","ProgressBar","start","end","current","setValue","setTimeout","Math","min","pr","LinearProgress","classes","root","MaintenanceRecordPanel","report","partsReplaced","parse","e","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","moment","date","format","ExpansionPanelDetails","notes","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","keys","includes","PartProvenance","parts","partData","setPartData","then","Fragment","index","description","name","maximumHours","totalHours","length","tailNumber","TabPanel","other","component","role","hidden","aria-labelledby","p","useStyles","makeStyles","theme","tabs","borderRight","palette","divider","text","main","minWidth","TabWrapper","condition","Aircraft","isMobile","setIsMobile","setData","handleResize","innerWidth","addEventListener","_","removeEventListener","info","aircraft","Array","fill","image","maintenanceSchedule","lastCompletedDate","Date","lastCompletedHours","round","random","maxHours","flightHours","owner","purchaseDate","soldDate","partsList","maintainers","maintenanceReports","newPart","Tabs","orientation","newValue","Tab","a11yProps","src","alt","pt","maintenance","App","setConnected","setList","catch","path","to","Boolean","hostname","match","darkTheme","createMuiTheme","overrides","MuiFormLabel","ReactDOM","render","ThemeProvider","basename","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.e19dbb83.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  Button,\n  Box,\n  Tooltip\n} from \"@material-ui/core\";\nimport FlightTakeoffIcon from \"@material-ui/icons/FlightTakeoff\";\nimport RssFeedIcon from \"@material-ui/icons/RssFeed\";\nimport \"./NavigationBar.css\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nexport const NavigationBar = ({ connected }) => {\n  const history = useHistory();\n  const location = useLocation();\n  const logout = () => {\n    window.sessionStorage.removeItem('jwt');\n    history.push(\"/\");\n    console.log(\"logout callback\");\n  };\n\n  return (\n    <AppBar position=\"sticky\">\n      <Toolbar>\n        <FlightTakeoffIcon fontSize=\"large\" />\n        <Typography variant=\"h6\" className=\"heading-web\">\n          Airline MRO + Hyperledger Fabric\n        </Typography>\n        <Typography variant=\"h6\" className=\"heading-mobile\">\n          Airline MRO\n        </Typography>\n        <Box px={2}>\n          {location.pathname === \"/aircraft\" && (\n            <Button color=\"inherit\" onClick={logout}>\n              Logout\n            </Button>\n          )}\n        </Box>\n        <Tooltip title={connected ? \"Network Connected\" : \"Not Connected\"}>\n          <RssFeedIcon color={connected ? \"inherit\" : \"secondary\"} />\n        </Tooltip>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default NavigationBar;\n","import React from \"react\";\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  CardActions,\n  Button,\n  Box\n} from \"@material-ui/core\";\nimport \"./LoginCard.css\";\n\nexport const LoginCard = ({\n  heading,\n  onClick,\n  disabled,\n  buttonText,\n  switchText,\n  toggleClick,\n  children\n}) => {\n  return (\n    <Box mt={6} mx={5} className=\"loginCard-container\">\n      <Card raised={true} className=\"loginCard-card\">\n        <CardHeader title={heading} className=\"loginCard-center\" />\n        <CardContent className=\"loginCard-content loginCard-center\">\n          {children}\n        </CardContent>\n        <CardActions className=\"loginCard-center\">\n          <Box mb={1}>\n            <Button onClick={toggleClick}>\n              {switchText}\n            </Button>\n          </Box>\n          <Button\n            fullWidth={true}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={onClick}\n            disabled={disabled}\n            className=\"loginCard-mainButton\"\n          >\n            {buttonText}\n          </Button>\n        </CardActions>\n      </Card>\n    </Box>\n  );\n};\n\nexport default LoginCard;\n","import React from \"react\";\nimport { TextField, Box } from \"@material-ui/core\";\nimport \"./TextInput.css\";\n\nexport const TextInput = ({ ...props }) => {\n  return (\n    <Box my={1} className=\"boxWidth\">\n      <TextField {...props} variant=\"outlined\" fullWidth={true}/>\n    </Box>\n  );\n};\n","import React from \"react\";\nimport { TextInput } from \"../TextInput/TextInput\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport \"./AutoCompleteText.css\"\n\nexport const AutoCompleteText = ({\n  options,\n  optionLabel,\n  freeSolo = false,\n  onInputChange,\n  id,\n  ...props\n}) => {\n  return (\n    <Autocomplete\n      options={options}\n      getOptionLabel={optionLabel}\n      freeSolo={freeSolo}\n      onInputChange={onInputChange}\n      className=\"autoCompleteContainer\"\n      renderInput={params => <TextInput {...params} {...props} />}\n    />\n  );\n};\n","const address = \"https://35.193.103.180:3000/\";\n\nexport const getCompanies = async () => {\n  const res = await fetch(address);\n  const data = await res.json();\n  return data;\n};\n\nexport const getUser = async (postType, params) => {\n  params.postType = postType;\n  const res = await fetch(address + \"login\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(params)\n  });\n  console.log(res);\n\n  if (postType === \"login\") {\n    const output = await res.json();\n    return output;\n  } else {\n    return res.status === 200;\n  }\n};\n\nexport const getAircraft = async id => {\n  const res = await fetch(address + `aircraft?id=${id}`);\n  const data = await res.json();\n  return data;\n};\n\nexport const getPart = async id => {\n  const res = await fetch(address + `part?id=${id}`);\n  const data = await res.json();\n  return data;\n};\n\nexport default getCompanies;\n","export const wordCapitalization = phrase => {\n  return phrase\n    .split(\" \")\n    .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n    .join(\" \");\n};\n\nexport default wordCapitalization;\n","import React from \"react\";\nimport \"./Login.css\";\nimport { LoginCard } from \"../../components/LoginCard/LoginCard\";\nimport { TextInput } from \"../../components/TextInput/TextInput\";\nimport { AutoCompleteText } from \"../../components/AutoCompleteText/AutoCompleteText\";\nimport { useHistory } from \"react-router-dom\";\nimport { getUser } from \"../../scripts/hyperledger.js\";\nimport { wordCapitalization } from \"../../scripts/wordManipulation.js\"\n\nexport const Login = ({ connected, companies, userData }) => {\n  const history = useHistory();\n  const types = [\"Administrator\", \"Maintainer\"];\n  const [register, setRegister] = React.useState(false);\n  const [userPass, setUserPass] = React.useState({\n    username: \"\",\n    password: \"\",\n    type: \"\",\n    company: \"\"\n  });\n  const [validatedPass, setValidatedPass] = React.useState(\"\");\n  const [validate, setValidate] = React.useState(false);\n  const [apiCalled, setAPIcalled] = React.useState(false);\n\n  React.useEffect(() => {\n    setValidate(!!validatedPass && userPass.password !== validatedPass);\n  }, [userPass.password, validatedPass]);\n\n  const loginHandle = async () => {\n    console.log(\"login click\");\n    const data = userPass;\n    delete data.verified; // remove extra key value pair\n    const res = connected ? await getUser(\"login\", data) : true;\n    console.log(res);\n    if (!res) {\n      //error logging in\n    } else {\n      userData.setInfo(res.user || {offline: true});\n      window.sessionStorage.setItem(\"jwt\", res.jwtToken)\n      history.push(\"/aircraft\");\n    }\n  };\n\n  const registerHandle = async () => {\n    console.log(\"register click\");\n    setAPIcalled(true);\n    const data = userPass;\n    delete data.verified; // remove extra key value pair\n    const res = connected ? await getUser(\"register\", data) : true;\n    setAPIcalled(false);\n    console.log(res);\n\n    if (res) {\n      loginHandle();\n    } else {\n      //error registering\n    }\n  };\n\n  const onChangeUserPass = event => {\n    const key = event.target.id;\n    const value = event.target.value;\n    setUserPass(prev => {\n      return { ...prev, [key]: value };\n    });\n  };\n\n  const autocompleteOnChange = (event, handler, key, obj) => {\n    let value = event.target.value;\n    // console.log(value);\n    if (typeof value === \"number\") {\n      value = event.target.innerText.toLowerCase();\n    }\n    handler(prev => {\n      return { ...prev, [key]: value || \"\" };\n    });\n  };\n\n  return (\n    <div className=\"login-container\">\n      <LoginCard\n        heading={register ? \"Register User\" : \"User Login\"}\n        switchText={\n          register ? \"Existing users sign in\" : \"New users register here\"\n        }\n        onClick={register ? registerHandle : loginHandle}\n        disabled={\n          !Object.values(userPass).every(val => !!val) ||\n          apiCalled ||\n          validate ||\n          (register && !validatedPass)\n        }\n        buttonText={register ? \"Register\" : \"Login\"}\n        toggleClick={() => setRegister(!register)}\n      >\n        <TextInput\n          label=\"Username\"\n          onChange={onChangeUserPass}\n          id=\"username\"\n          value={userPass.username}\n        />\n        <TextInput\n          label=\"Password\"\n          type=\"password\"\n          onChange={onChangeUserPass}\n          id=\"password\"\n          value={userPass.password}\n        />\n        {register && (\n          <TextInput\n            label=\"Confirm password\"\n            type=\"password\"\n            id=\"verified\"\n            onChange={event => setValidatedPass(event.target.value)}\n            disabled={!userPass.password}\n            error={validate}\n            helperText={validate ? \"passwords do not match\" : \"\"}\n          />\n        )}\n        <AutoCompleteText\n          options={types}\n          optionLabel={wordCapitalization}\n          label=\"Role\"\n          onInputChange={event => {\n            autocompleteOnChange(event, setUserPass, \"type\", types);\n          }}\n        />\n        <AutoCompleteText\n          options={companies.list}\n          optionLabel={wordCapitalization}\n          label=\"Company\"\n          freeSolo={userPass.type === \"administrator\" && register}\n          onInputChange={event => {\n            autocompleteOnChange(event, setUserPass, \"company\", companies.list);\n          }}\n        />\n      </LoginCard>\n    </div>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport { Box, LinearProgress, Typography } from \"@material-ui/core\";\nimport \"./ProgressBar.css\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport ErrorOutlineIcon from \"@material-ui/icons/ErrorOutline\";\n\nexport const ProgressBar = ({ start, end, current, label }) => {\n  const [value, setValue] = React.useState(0);\n\n  setTimeout(() => {\n    setValue(Math.min(((current - start) / (end - start)) * 100, 100));\n  }, 1000);\n\n  return (\n    <Box className=\"bar-container\">\n      <Box pr={2} className=\"bar-label\">\n        <Typography>{label}</Typography>\n      </Box>\n      <CheckCircleIcon\n        color={value < 75 ? \"primary\" : \"secondary\"}\n        fontSize=\"large\"\n      />\n      <LinearProgress\n        color={value < 75 ? \"primary\" : \"secondary\"}\n        variant=\"determinate\"\n        value={value}\n        classes={{ root: \"bar-indicator\" }}\n      />\n      {value < 95 ? (\n        <ErrorOutlineIcon color=\"disabled\" fontSize=\"large\" />\n      ) : (\n        <ErrorIcon color=\"secondary\" fontSize=\"large\" />\n      )}\n    </Box>\n  );\n};\n\n// \"action\",\"disabled\",\"error\",\"inherit\",\"primary\",\"secondary\"\n","import React from \"react\";\nimport {\n  Typography,\n  ExpansionPanel,\n  ExpansionPanelSummary,\n  ExpansionPanelDetails,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow\n} from \"@material-ui/core\";\nimport \"./MaintenanceRecordPanel.css\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { wordCapitalization } from \"../../scripts/wordManipulation.js\";\nimport moment from \"moment\";\n\nexport const MaintenanceRecordPanel = ({ report }) => {\n  try {\n    report.partsReplaced = JSON.parse(report.partsReplaced);\n  } catch (e) {\n    console.log(e);\n  }\n  console.log(report);\n  return (\n    <ExpansionPanel>\n      <ExpansionPanelSummary\n        expandIcon={<ExpandMoreIcon />}\n        aria-controls=\"panel1a-content\"\n        id=\"panel1a-header\"\n      >\n        <Typography>{moment(report.date).format(\"D MMM YYYY\")}</Typography>\n        <Typography className=\"expansion-secondLabel\">\n          {`Maintenance Type: ${wordCapitalization(report.type)}`}\n        </Typography>\n      </ExpansionPanelSummary>\n      <ExpansionPanelDetails className=\"expansionPanel-center\">\n        <Typography>{`Notes: ${report.notes}`}</Typography>\n        <TableContainer>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Original Part</TableCell>\n                <TableCell>New Part</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {Object.keys(report.partsReplaced).map(key => {\n                return (\n                  <TableRow key={key}>\n                    <TableCell>\n                      {key.includes(\"newPart\") ? \"--\" : key}\n                    </TableCell>\n                    <TableCell>{report.partsReplaced[key]}</TableCell>\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </ExpansionPanelDetails>\n    </ExpansionPanel>\n  );\n};\n","import React from \"react\";\nimport {\n  Typography,\n  ExpansionPanel,\n  ExpansionPanelSummary,\n  ExpansionPanelDetails\n} from \"@material-ui/core\";\nimport \"./PartProvenance.css\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { getPart } from \"../../scripts/hyperledger.js\";\nimport { ProgressBar } from \"../../components/ProgressBar/ProgressBar\";\n\nexport const PartProvenance = ({ parts }) => {\n  const [partData, setPartData] = React.useState([]);\n\n  React.useState(() => {\n    getPart(parts.join(\",\")).then(data => setPartData(data));\n  }, []);\n\n  return (\n    <React.Fragment>\n      {partData.map((partData, index) => (\n        <ExpansionPanel key={index}>\n          <ExpansionPanelSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"\n          >\n            {partData.description && (\n              <React.Fragment>\n                <Typography>{partData.description.id}</Typography>\n                <Typography className=\"expansion-secondLabel\">\n                  {partData.description.name}\n                </Typography>\n              </React.Fragment>\n            )}\n          </ExpansionPanelSummary>\n          <ExpansionPanelDetails className=\"expansionPanel-center\">\n            {partData.history && (\n              <ProgressBar\n                start={0}\n                end={partData.maximumHours}\n                current={partData.totalHours}\n                label={`Current Aircraft: ${partData.history[partData.history.length - 1].tailNumber}`}\n              />\n            )}\n          </ExpansionPanelDetails>\n        </ExpansionPanel>\n      ))}\n    </React.Fragment>\n  );\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Tabs, Tab, Typography, Box, AppBar } from \"@material-ui/core\";\nimport { ProgressBar } from \"../../components/ProgressBar/ProgressBar\";\nimport \"./Aircraft.css\";\nimport { wordCapitalization } from \"../../scripts/wordManipulation.js\";\nimport moment from \"moment\";\nimport { getAircraft } from \"../../scripts/hyperledger.js\";\nimport { MaintenanceRecordPanel } from \"../../components/MaintenanceRecordPanel/MaintenanceRecordPanel\";\nimport { PartProvenance } from \"../../components/PartProvenance/PartProvenance\";\n\n//from: https://material-ui.com/components/tabs/\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`vertical-tabpanel-${index}`}\n      aria-labelledby={`vertical-tab-${index}`}\n      className=\"detailContainer\"\n      {...other}\n    >\n      {value === index && (\n        <Box p={3} className=\"detailContainer-box\">\n          {children}\n        </Box>\n      )}\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `vertical-tab-${index}`,\n    \"aria-controls\": `vertical-tabpanel-${index}`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  tabs: {\n    borderRight: `1px solid ${theme.palette.divider}`,\n    color: theme.palette.text.main,\n    minWidth: \"15%\"\n  }\n}));\n\nconst TabWrapper = ({ condition, children }) =>\n  condition ? (\n    children\n  ) : (\n    <AppBar position=\"static\" color=\"transparent\">\n      {children}\n    </AppBar>\n  );\n\nexport const Aircraft = ({ connected, userData }) => {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n  const [isMobile, setIsMobile] = React.useState(false);\n  const [data, setData] = React.useState([]);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  React.useEffect(() => {\n    function handleResize() {\n      if (window.innerWidth <= 600 && !isMobile) {\n        setIsMobile(true);\n      } else if (window.innerWidth > 600 && isMobile) {\n        setIsMobile(false);\n      }\n    }\n    handleResize();\n    window.addEventListener(\"resize\", handleResize);\n    return _ => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, [isMobile]);\n\n  React.useEffect(() => {\n    if (!connected) {\n      const maintTypes = [\"A\", \"B\", \"C\", \"D\"];\n      setData(\n        new Array(20).fill({\n          description: {\n            aircraft: \"Boeing 787-8 Dreamliner\",\n            tailNumber: \"G-ZBJG\",\n            image: \"https://cdn.jetphotos.com/full/6/27290_1582395615.jpg\"\n          },\n          maintenanceSchedule: maintTypes.map(type => {\n            return {\n              type: type,\n              lastCompletedDate: new Date(),\n              lastCompletedHours: Math.round(Math.random() * 100),\n              maxHours: 250\n            };\n          }),\n          flightHours: Math.round(Math.random() * 250),\n          owner: [\n            {\n              company: \"british airways\",\n              purchaseDate: new Date(),\n              soldDate: null\n            }\n          ],\n          partsList: [],\n          maintainers: [],\n          maintenanceReports: new Array(2).fill(\n            {\n              date: new Date(),\n              type: \"General\",\n              notes: \"Test maintenance report\",\n              partsReplaced: JSON.stringify({\n                newPart: \"test part\",\n                \"testing part\": \"testing parts\"\n              })\n            }\n          )\n        })\n      );\n    } else {\n      getAircraft(userData.info.aircraft.join(\",\")).then(res => {\n        setData(res);\n        console.log(res);\n      });\n    }\n  }, [connected, userData.info.aircraft]);\n\n  return (\n    <div\n      className={`mainContainer ${\n        !isMobile ? \"horizontalOrient\" : \"verticalOrient\"\n      }`}\n    >\n      <TabWrapper condition={!isMobile}>\n        <Tabs\n          orientation={!isMobile ? \"vertical\" : \"horizontal\"}\n          variant=\"scrollable\"\n          value={value}\n          onChange={handleChange}\n          className={classes.tabs}\n        >\n          {data.map((obj, index) => (\n            <Tab\n              label={obj.description.tailNumber}\n              key={`plane${index}`}\n              {...a11yProps(index)}\n            />\n          ))}\n        </Tabs>\n      </TabWrapper>\n      {data.map((obj, index) => {\n        console.log(obj);\n        return (\n          <TabPanel value={value} index={index} key={`aircraft${index}`}>\n            <Box className=\"panel-header-details\">\n              <Typography variant=\"h2\">{obj.description.aircraft}</Typography>\n              <Typography variant=\"h6\">{`Tail Number: ${obj.description.tailNumber}`}</Typography>\n              <Typography variant=\"h6\">{`Company: ${wordCapitalization(\n                obj.owner[obj.owner.length - 1].company\n              )}`}</Typography>\n            </Box>\n            <Box className=\"panel-header-image\">\n              <img\n                src={obj.description.image}\n                alt={`${obj.description.aircraft} ${obj.description.tailNumber}`}\n              />\n            </Box>\n            <Box my={1} className=\"panel-content\">\n              <Typography variant=\"h5\">Maintenance Checks</Typography>\n              <Box pt={1}>\n                {obj.maintenanceSchedule.map(maintenance => {\n                  return (\n                    <ProgressBar\n                      start={maintenance.lastCompletedHours}\n                      end={\n                        maintenance.lastCompletedHours + maintenance.maxHours\n                      }\n                      current={obj.flightHours}\n                      label={`${\n                        maintenance.type\n                      } Check - Last Completed: ${moment(\n                        maintenance.lastCompletedDate\n                      ).format(\"D MMM YYYY\")}`}\n                      key={maintenance.type}\n                    />\n                  );\n                })}\n              </Box>\n            </Box>\n            <Box my={1} className=\"panel-content\">\n              <Typography variant=\"h5\">Parts Provenance</Typography>\n              <Box pt={1}>\n                {obj.partsList.length > 0 && (\n                  <PartProvenance parts={obj.partsList} />\n                )}\n              </Box>\n            </Box>\n            <Box my={1} className=\"panel-content\">\n              <Typography variant=\"h5\">Maintenance Reports</Typography>\n              {obj.maintenanceReports.length > 0 && (\n                <Box pt={1}>\n                  {obj.maintenanceReports.map((report, index) => (\n                    <MaintenanceRecordPanel report={report} key={index} />\n                  ))}\n                </Box>\n              )}\n            </Box>\n          </TabPanel>\n        );\n      })}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { NavigationBar } from \"./components/NavigationBar/NavigationBar\";\nimport { Login } from \"./container/Login/Login\";\nimport { Aircraft } from \"./container/Aircraft/Aircraft\";\nimport { getCompanies } from \"./scripts/hyperledger.js\";\n\nfunction App() {\n  const [connected, setConnected] = React.useState(false);\n  const [list, setList] = React.useState([]);\n  const companies = { list, setList };\n  const [info, setInfo] = React.useState({});\n  const user = { info, setInfo };\n\n  React.useEffect(() => {\n    getCompanies()\n      .then(res => {\n        console.log(res);\n        setList(res);\n        setConnected(true);\n      })\n      .catch(e => {\n        console.log(e);\n        setConnected(false);\n        setList([\"air canada\", \"KLM\", \"united\", \"delta\"]); //offline data for demo purposes\n      });\n  }, []);\n\n  return (\n    <React.Fragment>\n      <NavigationBar connected={connected} />\n      <Switch>\n        <Route path=\"/aircraft\">\n          {Object.keys(info).length === 0 ? (\n            <Redirect to=\"/\" />\n          ) : (\n            <Aircraft connected={connected} userData={user} />\n          )}\n        </Route>\n        <Route path=\"/\">\n          <Login connected={connected} companies={companies} userData={user} />\n        </Route>\n      </Switch>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\n\nconst darkTheme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n    text: {\n      main: \"#fff\",\n    }\n  },\n  overrides: {\n    MuiFormLabel: {\n      root: {\n        \"&$focused\": {\n          color: \"white\"\n        }\n      }\n    }\n  }\n});\n\nReactDOM.render(\n  <ThemeProvider theme={darkTheme}>\n    <Router basename=\"/\">\n      <App />\n    </Router>\n  </ThemeProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}