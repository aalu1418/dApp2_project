{"version":3,"sources":["components/NavigationBar/NavigationBar.js","components/LoginCard/LoginCard.js","components/TextInput/TextInput.js","components/AutoCompleteText/AutoCompleteText.js","scripts/hyperledger.js","scripts/wordManipulation.js","container/Login/Login.js","components/ProgressBar/ProgressBar.js","components/MaintenanceRecordPanel/MaintenanceRecordPanel.js","components/HistoryTable/HistoryTable.js","components/PartProvenance/PartProvenance.js","components/FabButton/FabButton.js","components/PopUp/PopUp.js","components/Forms/RegisterAircraft.js","components/Forms/AssignMaintainer.js","components/Forms/NewPart.js","components/Forms/ReportMaintenance.js","components/Forms/SellAircraft.js","components/Forms/UpdateHours.js","container/Aircraft/Aircraft.js","App.js","serviceWorker.js","index.js"],"names":["NavigationBar","connected","history","useHistory","location","useLocation","AppBar","position","Toolbar","fontSize","Typography","variant","className","Box","px","pathname","Button","color","onClick","window","sessionStorage","removeItem","push","console","log","Tooltip","title","LoginCard","heading","disabled","buttonText","switchText","toggleClick","children","mt","mx","Card","raised","CardHeader","CardContent","CardActions","mb","fullWidth","TextInput","props","my","TextField","AutoCompleteText","options","optionLabel","freeSolo","onInputChange","id","Autocomplete","getOptionLabel","renderInput","params","address","postHeader","Authorization","getItem","fetchLoop","endpoint","a","info","i","fetch","res","status","Promise","r","setTimeout","getCompanies","json","data","getUser","postType","method","headers","body","JSON","stringify","output","getAircraft","getPart","getMaintainers","callAPI","wordCapitalization","phrase","split","map","word","charAt","toUpperCase","slice","join","Login","companies","userData","types","React","useState","register","setRegister","username","password","type","company","userPass","setUserPass","validatedPass","setValidatedPass","validate","setValidate","apiCalled","setAPIcalled","open","setOpen","message","setMessage","useEffect","loginHandle","verified","user","setInfo","setItem","jwtToken","registerHandle","handleClose","event","reason","onChangeUserPass","key","target","value","prev","autocompleteOnChange","handler","obj","innerText","toLowerCase","Object","values","every","val","label","onChange","error","helperText","list","Snackbar","autoHideDuration","onClose","elevation","severity","ProgressBar","start","end","current","setValue","Math","min","pr","arrow","LinearProgress","classes","root","MaintenanceRecordPanel","report","partsReplaced","parse","e","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","moment","date","format","ExpansionPanelDetails","notes","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","keys","includes","HistoryTable","objArray","mapping","large","pb","size","row","index","isValid","processEntry","PartProvenance","parts","refresh","partData","setPartData","loading","setLoading","description","name","totalHours","maximumHours","tailNumber","hours","onDate","Date","offDate","then","Fragment","CircularProgress","undefined","part","length","FabButton","popUp","admin","setMenu","toggle","setToggle","vis","setVis","icon","AirplanemodeActiveIcon","PersonAddIcon","AirplanemodeInactiveIcon","UpdateIcon","BuildIcon","SettingsIcon","closeHandle","relatedTarget","onBlur","option","IconObj","style","transitionDelay","Fab","set","aria-label","PopUp","popState","Dialog","aria-labelledby","DialogTitle","RegisterAircraft","trigger","aircraft","owner","image","setData","submitted","setSubmitted","handleCancel","handleSubmit","handleChange","eventInfo","DialogContent","DialogContentText","DialogActions","some","AssignMaintainer","maintainers","setMaintainers","maintainer","NewPart","Number","crypto","require","ReportMaintenance","temp","partsList","forEach","updateParts","filteredParts","replacedParts","handlePartChange","TextareaAutosize","placeholder","rowsMin","rowsMax","stickyHeader","oldPart","InputBase","randomBytes","toString","startIcon","SellAircraft","companyList","filter","UpdateHours","TabPanel","other","component","role","hidden","p","useStyles","makeStyles","theme","tabs","borderRight","palette","divider","text","main","minWidth","TabWrapper","condition","menuComponent","Aircraft","isMobile","setIsMobile","menu","snackbarOpen","setSnackbarOpen","transaction","setTransaction","setRefresh","handleResize","innerWidth","addEventListener","_","removeEventListener","catch","Array","fill","maintenanceSchedule","lastCompletedDate","lastCompletedHours","round","random","maxHours","flightHours","purchaseDate","soldDate","maintenanceReports","newPart","MenuComponent","Tabs","orientation","newValue","Tab","a11yProps","src","alt","pt","maintenance","IconButton","App","setConnected","setList","path","to","Boolean","hostname","match","darkTheme","createMuiTheme","overrides","MuiFormLabel","MuiTooltip","tooltip","ReactDOM","render","ThemeProvider","basename","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"ioBAcaA,G,OAAgB,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACxBC,EAAUC,cACVC,EAAWC,cAOjB,OACE,kBAACC,EAAA,EAAD,CAAQC,SAAS,UACf,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,CAAmBC,SAAS,UAC5B,kBAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,eAAnC,oCAGA,kBAACF,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,kBAAnC,eAGA,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACgB,cAAtBV,EAASW,UACR,kBAACC,EAAA,EAAD,CAAQC,MAAM,UAAUC,QAlBnB,WACbC,OAAOC,eAAeC,WAAW,OACjCnB,EAAQoB,KAAK,KACbC,QAAQC,IAAI,qBAeJ,WAKJ,kBAACC,EAAA,EAAD,CAASC,MAAOzB,EAAY,oBAAsB,iBAChD,kBAAC,IAAD,CAAagB,MAAOhB,EAAY,UAAY,mB,wGC9BzC0B,G,OAAY,SAAC,GAQnB,IAPLC,EAOI,EAPJA,QACAV,EAMI,EANJA,QACAW,EAKI,EALJA,SACAC,EAII,EAJJA,WACAC,EAGI,EAHJA,WACAC,EAEI,EAFJA,YACAC,EACI,EADJA,SAEA,OACE,kBAACpB,EAAA,EAAD,CAAKqB,GAAI,EAAGC,GAAI,EAAGvB,UAAU,uBAC3B,kBAACwB,EAAA,EAAD,CAAMC,QAAQ,EAAMzB,UAAU,kBAC5B,kBAAC0B,EAAA,EAAD,CAAYZ,MAAOE,EAAShB,UAAU,qBACtC,kBAAC2B,EAAA,EAAD,CAAa3B,UAAU,sCACpBqB,GAEH,kBAACO,EAAA,EAAD,CAAa5B,UAAU,oBACrB,kBAACC,EAAA,EAAD,CAAK4B,GAAI,GACP,kBAACzB,EAAA,EAAD,CAAQE,QAASc,GACdD,IAGL,kBAACf,EAAA,EAAD,CACE0B,WAAW,EACX/B,QAAQ,YACRM,MAAM,UACNC,QAASA,EACTW,SAAUA,EACVjB,UAAU,wBAETkB,Q,SCrCAa,G,OAAY,SAAC,GAAkB,IAAbC,EAAY,oBACzC,OACE,kBAAC/B,EAAA,EAAD,CAAKgC,GAAI,EAAGjC,UAAU,YACpB,kBAACkC,EAAA,EAAD,iBAAeF,EAAf,CAAsBjC,QAAQ,WAAW+B,WAAW,Q,kBCF7CK,G,OAAmB,SAAC,GAO1B,IANLC,EAMI,EANJA,QACAC,EAKI,EALJA,YAKI,IAJJC,gBAII,SAHJC,EAGI,EAHJA,cAEGP,GACC,EAFJQ,GAEI,0EACJ,OACE,kBAACC,EAAA,EAAD,CACEL,QAASA,EACTM,eAAgBL,EAChBC,SAAUA,EACVC,cAAeA,EACfvC,UAAU,wBACV2C,YAAa,SAAAC,GAAM,OAAI,kBAAC,EAAD,iBAAeA,EAAYZ,SCpBlDa,EAAU,+BAOVC,EAAa,WACjB,MAAO,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAPDxC,OAAOC,eAAewC,QAAQ,UAaxCC,EAAS,uCAAG,WAAOC,GAAP,+BAAAC,EAAA,sDAAiBC,EAAjB,+BAAwB,GAE/BC,EAAI,EAFG,YAEAA,EAJE,GAEF,iCAGFC,MAAMJ,EAAUE,GAHd,UAIK,OADnBG,EAHc,QAINC,OAJM,oEAOR,IAAIC,SAAQ,SAAAC,GAAC,OAAIC,WAAWD,EAAG,QAPvB,QAEiBL,IAFjB,gDASTE,GATS,4CAAH,sDAYFK,EAAY,uCAAG,8BAAAT,EAAA,sEACRF,EAAUJ,GADF,cACpBU,EADoB,gBAEPA,EAAIM,OAFG,cAEpBC,EAFoB,yBAGnBA,GAHmB,2CAAH,qDAMZC,EAAO,uCAAG,WAAOC,EAAUpB,GAAjB,iBAAAO,EAAA,6DACrBP,EAAOoB,SAAWA,EADG,SAEHf,EAAUJ,EAAU,QAAS,CAC7CoB,OAAQ,OACRC,QAASpB,IACTqB,KAAMC,KAAKC,UAAUzB,KALF,UAEfW,EAFe,OAOrB5C,QAAQC,IAAI2C,GAEK,UAAbS,EATiB,iCAUET,EAAIM,OAVN,cAUbS,EAVa,yBAWZA,GAXY,iCAaG,MAAff,EAAIC,QAbQ,4CAAH,wDAiBPe,EAAW,uCAAG,WAAM/B,GAAN,iBAAAW,EAAA,+EAELF,EAAUJ,EAAO,sBAAkBL,IAF9B,cAEjBe,EAFiB,gBAGJA,EAAIM,OAHA,cAGjBC,EAHiB,yBAIhBA,GAJgB,kCAMvBnD,QAAQC,IAAR,MANuB,0DAAH,sDAUX4D,EAAO,uCAAG,WAAMhC,GAAN,iBAAAW,EAAA,+EAEDF,EAAUJ,EAAO,kBAAcL,IAF9B,cAEbe,EAFa,gBAGAA,EAAIM,OAHJ,cAGbC,EAHa,yBAIZA,GAJY,kCAMnBnD,QAAQC,IAAR,MANmB,0DAAH,sDAUP6D,EAAc,uCAAG,8BAAAtB,EAAA,+EAERF,EAAUJ,EAAU,QAAS,CAC7CoB,OAAQ,MACRC,QAASpB,MAJe,cAEpBS,EAFoB,gBAMPA,EAAIM,OANG,cAMpBC,EANoB,yBAOnBA,GAPmB,kCAS1BnD,QAAQC,IAAR,MAT0B,0DAAH,qDAad8D,EAAO,uCAAG,WAAOxB,EAAUe,EAAQH,GAAzB,eAAAX,EAAA,+EAEDF,EAAUJ,EAAUK,EAAU,CAC9Ce,SACAC,QAASpB,IACTqB,KAAMC,KAAKC,UAAUP,KALJ,cAEbP,EAFa,yBAOG,MAAfA,EAAIC,QAPQ,gCASnB7C,QAAQC,IAAR,MATmB,yDAAH,0DCpFP+D,EAAqB,SAAAC,GAChC,OAAOA,EACJC,MAAM,KACNC,KAAI,SAAAC,GAAI,OAAIA,EAAKC,OAAO,GAAGC,cAAgBF,EAAKG,MAAM,MACtDC,KAAK,MCOGC,EAAQ,SAAC,GAAwC,IAAtC/F,EAAqC,EAArCA,UAAWgG,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,SACtChG,EAAUC,cACVgG,EAAQ,CAAC,gBAAiB,cAF2B,EAG3BC,IAAMC,UAAS,GAHY,mBAGpDC,EAHoD,KAG1CC,EAH0C,OAI3BH,IAAMC,SAAS,CAC7CG,SAAU,GACVC,SAAU,GACVC,KAAM,GACNC,QAAS,KARgD,mBAIpDC,EAJoD,KAI1CC,EAJ0C,OAUjBT,IAAMC,SAAS,IAVE,mBAUpDS,EAVoD,KAUrCC,EAVqC,OAW3BX,IAAMC,UAAS,GAXY,mBAWpDW,EAXoD,KAW1CC,EAX0C,OAYzBb,IAAMC,UAAS,GAZU,mBAYpDa,EAZoD,KAYzCC,EAZyC,OAanCf,IAAMC,UAAS,GAboB,mBAapDe,EAboD,KAa9CC,EAb8C,OAc7BjB,IAAMC,SAAS,IAdc,mBAcpDiB,EAdoD,KAc3CC,EAd2C,KAiB3DnB,IAAMoB,WAAU,WACdP,IAAcH,GAAiBF,EAASH,WAAaK,KACpD,CAACF,EAASH,SAAUK,IAGvB,IAAMW,EAAW,uCAAG,8BAAA1D,EAAA,yDAClBxC,QAAQC,IAAI,sBACNkD,EAAOkC,GACDc,SAHM,UAKJzH,EALI,iCAKc0E,EAAQ,QAASD,GAL/B,gDAKuC,CAACiD,KAAM,CAACjB,KAAME,EAASF,OAL9D,QAKVvC,EALU,KAMhB5C,QAAQC,IAAI2C,GACZ+B,EAAS0B,QAAQzD,EAAIwD,MACrBxG,OAAOC,eAAeyG,QAAQ,MAAO1D,EAAI2D,UACzC5H,EAAQoB,KAAK,aATG,kDAYhBiG,EAAW,oBACXF,GAAQ,GAbQ,0DAAH,qDAkBXU,EAAc,uCAAG,8BAAAhE,EAAA,yDACrBxC,QAAQC,IAAI,kBACZ2F,GAAa,UACPzC,EAAOkC,GACDc,UACAzH,EALS,iCAKS0E,EAAQ,WAAYD,GAL7B,iDAKqC,EALrC,QAKfP,EALe,KAMrBgD,GAAa,GACb5F,QAAQC,IAAI2C,GAERA,EACFsD,KAGAF,EAAW,qBACXF,GAAQ,IAdW,4CAAH,qDAmBdW,EAAc,SAACC,EAAOC,GACX,cAAXA,GAGJb,GAAQ,IAIJc,EAAmB,SAAAF,GACvB,IAAMG,EAAMH,EAAMI,OAAOjF,GACnBkF,EAAQL,EAAMI,OAAOC,MAC3BzB,GAAY,SAAA0B,GACV,OAAO,eAAKA,EAAZ,eAAmBH,EAAME,QAKvBE,EAAuB,SAACP,EAAOQ,EAASL,EAAKM,GACjD,IAAIJ,EAAQL,EAAMI,OAAOC,MAEJ,kBAAVA,IACTA,EAAQL,EAAMI,OAAOM,UAAUC,eAEjCH,GAAQ,SAAAF,GACN,OAAO,eAAKA,EAAZ,eAAmBH,EAAME,GAAS,SAItC,OACE,yBAAK1H,UAAU,mBACb,kBAAC,EAAD,CACEgB,QAAS0E,EAAW,gBAAkB,aACtCvE,WACEuE,EAAW,yBAA2B,0BAExCpF,QAASoF,EAAWyB,EAAiBN,EACrC5F,UACGgH,OAAOC,OAAOlC,GAAUmC,OAAM,SAAAC,GAAG,QAAMA,MACxC9B,GACAF,GACCV,IAAaQ,EAEhBhF,WAAYwE,EAAW,WAAa,QACpCtE,YAAa,kBAAMuE,GAAaD,KAEhC,kBAAC,EAAD,CACE2C,MAAM,WACNC,SAAUf,EACV/E,GAAG,WACHkF,MAAO1B,EAASJ,WAElB,kBAAC,EAAD,CACEyC,MAAM,WACNvC,KAAK,WACLwC,SAAUf,EACV/E,GAAG,WACHkF,MAAO1B,EAASH,WAEjBH,GACC,kBAAC,EAAD,CACE2C,MAAM,mBACNvC,KAAK,WACLtD,GAAG,WACH8F,SAAU,SAAAjB,GAAK,OAAIlB,EAAiBkB,EAAMI,OAAOC,QACjDzG,UAAW+E,EAASH,SACpB0C,MAAOnC,EACPoC,WAAYpC,EAAW,yBAA2B,KAGtD,kBAAC,EAAD,CACEhE,QAASmD,EACTlD,YAAasC,EACb0D,MAAM,OACN9F,cAAe,SAAA8E,GACbO,EAAqBP,EAAOpB,EAAa,WAG7C,kBAAC,EAAD,CACE7D,QAASiD,EAAUoD,KACnBpG,YAAasC,EACb0D,MAAM,UACN/F,SAA4B,kBAAlB0D,EAASF,MAA4BJ,EAC/CnD,cAAe,SAAA8E,GACbO,EAAqBP,EAAOpB,EAAa,UAAWZ,EAAUoD,UAIpE,kBAACC,EAAA,EAAD,CAAUlC,KAAMA,EAAMmC,iBAAkB,IAAMC,QAASxB,GACrD,kBAAC,IAAD,CACEyB,UAAW,EACX9I,QAAQ,SACR6I,QAASxB,EACT0B,SAAS,SAERpC,M,kJC7JEqC,GAAc,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,IAAKC,EAAqB,EAArBA,QAASb,EAAY,EAAZA,MAAY,EACnC7C,IAAMC,SAAS,GADoB,mBACtDiC,EADsD,KAC/CyB,EAD+C,KAO7D,OAJAxF,YAAW,WACTwF,EAASC,KAAKC,KAAMH,EAAUF,IAAUC,EAAMD,GAAU,IAAK,QAC5D,KAGD,kBAAC/I,EAAA,EAAD,CAAKD,UAAU,iBACb,kBAACC,EAAA,EAAD,CAAKqJ,GAAI,EAAGtJ,UAAU,aACnBqI,GAEH,kBAACxH,EAAA,EAAD,CAAS0I,OAAO,EAAMzI,MAAOkI,GAC3B,kBAAC,KAAD,CACE3I,MAAOqH,EAAQ,GAAK,UAAY,YAChC7H,SAAS,WAGb,kBAACgB,EAAA,EAAD,CAAS0I,OAAO,EAAMzI,MAAOoI,GAC3B,kBAACM,GAAA,EAAD,CACEnJ,MAAOqH,EAAQ,GAAK,UAAY,YAChC3H,QAAQ,cACR2H,MAAOA,EACP+B,QAAS,CAAEC,KAAM,oBAGrB,kBAAC7I,EAAA,EAAD,CAAS0I,OAAO,EAAMzI,MAAOmI,GAC1BvB,EAAQ,GACP,kBAAC,KAAD,CAAkBrH,MAAM,WAAWR,SAAS,UAE5C,kBAAC,KAAD,CAAWQ,MAAM,YAAYR,SAAS,a,oJCnBnC8J,GAAyB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACvC,IACEA,EAAOC,cAAgBzF,KAAK0F,MAAMF,EAAOC,eACzCD,EAAOC,cAAgBzF,KAAK0F,MAAMF,EAAOC,eACzC,MAAOE,IAIT,OACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACEC,WAAY,kBAAC,KAAD,MACZC,gBAAc,kBACd3H,GAAG,kBAEH,kBAAC1C,EAAA,EAAD,KAAasK,KAAOR,EAAOS,MAAMC,OAAO,eACxC,kBAACxK,EAAA,EAAD,CAAYE,UAAU,yBAAtB,4BACwB2E,EAAmBiF,EAAO9D,SAGpD,kBAACyE,GAAA,EAAD,CAAuBvK,UAAU,yBAC/B,kBAACF,EAAA,EAAD,sBAAuB8J,EAAOY,QAC9B,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,sBACA,kBAACA,GAAA,EAAD,mBAGJ,kBAACC,GAAA,EAAD,KACG7C,OAAO8C,KAAKnB,EAAOC,eAAe/E,KAAI,SAAA0C,GACrC,OACE,kBAACoD,GAAA,EAAD,CAAUpD,IAAKA,GACb,kBAACqD,GAAA,EAAD,KACGrD,EAAIwD,SAAS,WAAa,KAAOxD,GAEpC,kBAACqD,GAAA,EAAD,KAAYjB,EAAOC,cAAcrC,cCzBxCyD,I,cAAe,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,SAAUC,EAA2B,EAA3BA,QAA2B,IAAlBC,aAAkB,SAClE,OACE,6BACE,kBAACtL,EAAA,EAAD,CAAYC,QAASqL,EAAQ,KAAO,QAApC,YACA,kBAACnL,EAAA,EAAD,CAAKC,GAAI,EAAGmL,GAAI,GACd,kBAACZ,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAOY,KAAK,SACV,kBAACX,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACG3C,OAAOC,OAAOiD,GAASrG,KAAI,SAAA9D,GAAO,OACjC,kBAAC6J,GAAA,EAAD,CAAWrD,IAAKxG,GAAUA,QAIhC,kBAAC8J,GAAA,EAAD,KACGI,EAASpG,KAAI,SAACyG,EAAKC,GAAN,OACZ,kBAACZ,GAAA,EAAD,CAAUpD,IAAKgE,GACZvD,OAAO8C,KAAKI,GAASrG,KAAI,SAAA0C,GACxB,OACE,kBAACqD,GAAA,EAAD,CAAWrD,IAAKA,GAlCjB,SAACY,EAAKZ,GACzB,MAAY,UAARA,EACKY,EAGLgC,KAAOhC,GAAKqD,UACPrB,KAAOhC,GAAKkC,OAAO,cAGvBlC,EAGEzD,EAAmByD,GAFjB,KAyBcsD,CAAaH,EAAI/D,GAAMA,kBCpCnCmE,GAAiB,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QAAc,EACpBrG,IAAMC,SAAS,IADK,mBAC7CqG,EAD6C,KACnCC,EADmC,OAEtBvG,IAAMC,UAAS,GAFO,mBAE7CuG,EAF6C,KAEpCC,EAFoC,KA8BpD,OA1BAzG,IAAMoB,WAAU,WACS,aAAnBgF,EAAMzG,KAAK,IACb4G,EAAY,CACV,CACEG,YAAa,CAAE1J,GAAI,WAAY2J,KAAM,qBACrCC,WAAY,IACZC,aAAc,IACd/M,QAAS,CACP,CACEgN,WAAY,SACZC,MAAO,IACPC,OAAQ,IAAIC,KACZC,QAAS,WAMjBT,GAAW,GACXzH,EAAQoH,EAAMzG,KAAK,MAAMwH,MAAK,SAAA7I,GAC5BiI,EAAYjI,GACZmI,GAAW,SAGd,CAACL,EAAOC,IAGT,kBAAC,IAAMe,SAAP,KACGZ,GACC,yBAAKhM,UAAU,0BACb,kBAAC6M,EAAA,EAAD,YAGUC,IAAbhB,GACCA,EAAShH,KAAI,SAACiI,EAAMvB,GAAP,OACX,kBAACxB,GAAA,EAAD,CAAgBxC,IAAKgE,GACnB,kBAACvB,GAAA,EAAD,CACEC,WAAY,kBAAC,KAAD,MACZC,gBAAc,kBACd3H,GAAG,kBAEFuK,EAAKb,aACJ,kBAAC,IAAMU,SAAP,KACE,yBAAK5M,UAAU,eACb,kBAACF,EAAA,EAAD,KAAaiN,EAAKb,YAAY1J,KAEhC,kBAAC1C,EAAA,EAAD,CAAYE,UAAU,yBACnB+M,EAAKb,YAAYC,QAK1B,kBAAC5B,GAAA,EAAD,CAAuBvK,UAAU,yBAC9B+M,EAAKzN,SACJ,kBAAC,IAAMsN,SAAP,KACE,kBAAC,GAAD,CACE5D,MAAO,EACPC,IAAK8D,EAAKV,aACVnD,QAAS6D,EAAKX,WACd/D,MAAK,4BAAuB0E,EAAKzN,QAAQyN,EAAKzN,QAAQ0N,OAAS,GAAGV,cAEpE,kBAAC,GAAD,CACEpB,SAAU6B,EAAKzN,QACf6L,QAAS,CACPmB,WAAY,WACZC,MAAO,QACPC,OAAQ,UACRE,QAAS,sB,6JC1ElBO,I,OAAY,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QAAc,EAC1B5H,IAAMC,UAAS,GADW,mBAC/C4H,EAD+C,KACvCC,EADuC,OAEhC9H,IAAMC,UAAS,GAFiB,mBAE/C8H,EAF+C,KAE1CC,EAF0C,KAGlDpL,EAAU,GAGZA,EADE+K,EACQ,CACR,CAAE9E,MAAO,oBAAqBoF,KAAMC,MACpC,CAAErF,MAAO,oBAAqBoF,KAAME,MACpC,CAAEtF,MAAO,gBAAiBoF,KAAMG,OAGxB,CACR,CAAEvF,MAAO,eAAgBoF,KAAMI,MAC/B,CAAExF,MAAO,qBAAsBoF,KAAMK,MACrC,CAAEzF,MAAO,WAAYoF,KAAMM,OAI/B,IAAMC,EAAc,SAAA3G,GACU,OAAxBA,EAAM4G,gBACRX,GAAU,GACV3J,YAAW,kBAAM6J,GAAO,KAAQ,OAYpC,OACE,yBAAKxN,UAAU,MAAMkO,OAAQF,GAC3B,yBAAKhO,UAAS,4BAAuBuN,EAAM,UAAY,KACpDnL,EAAQ0C,KAAI,SAACqJ,EAAQ3C,GACpB,IAAM4C,EAAUD,EAAOV,KAMvB,OACE,kBAACxN,EAAA,EAAD,CACE4B,GAAI,EACJ2F,IAAK2G,EAAO9F,MACZrI,UAAS,iBAAYqN,EAAS,OAAS,IACvCgB,MAAO,CAAEC,gBAAgB,GAAD,OAAK,GAAM9C,EAAX,OAExB,kBAAC+C,GAAA,EAAD,CAAKxO,QAAQ,WAAWO,QAZR,WAClB4M,EAAMsB,KAAI,GACVR,EAAY,CAAEC,cAAe,OAC7Bb,EAAQe,EAAO9F,SAUX,kBAAC+F,EAAD,CAASpO,UAAU,kBAClBmO,EAAO9F,YAMlB,kBAACkG,GAAA,EAAD,CAAKlO,MAAM,UAAUoO,aAAW,MAAMnO,QAjCvB,WACZ+M,EAIHW,EAAY,CAAEC,cAAe,QAH7BT,GAAO,GACPF,GAAU,MA+BR,kBAAC,KAAD,CAAStN,UAAS,sBAAiBqN,EAAS,OAAS,U,oBCpEhDqB,GAAQ,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAU7N,EAAsB,EAAtBA,MAAOO,EAAe,EAAfA,SAKvC,OACE,kBAACuN,GAAA,EAAD,CACEpI,KAAMmI,EAASnI,KACfoC,QAPgB,WAClB+F,EAASH,KAAI,IAOXK,kBAAgB,qBAEhB,kBAACC,GAAA,EAAD,CAAatM,GAAG,qBAAqB1B,GACpCO,I,8BCHM0N,I,MAAmB,SAAC,GAAoC,IAAlCJ,EAAiC,EAAjCA,SAAUzF,EAAuB,EAAvBA,QAAS8F,EAAc,EAAdA,QAAc,EAC1CxJ,IAAMC,SAAS,CACrCwJ,SAAU,GACV3C,WAAY,GACZvG,QAASmD,EAAQgG,MAAMhK,OAAO,GAAG,GAAGa,QACpCoJ,MAAO,KALyD,mBAC3DrL,EAD2D,KACrDsL,EADqD,OAOhC5J,IAAMC,UAAS,GAPiB,mBAO3D4J,EAP2D,KAOhDC,EAPgD,KAS5DC,EAAe,WACnBH,EAAQ,CACNH,SAAU,GACV3C,WAAY,GACZvG,QAAS,GACToJ,MAAO,KAETR,EAASH,KAAI,IAGTgB,EAAY,uCAAG,4BAAArM,EAAA,6DACnBmM,GAAa,GADM,SAED5K,EAAQ,WAAY,OAAQZ,GAF3B,OAEbP,EAFa,OAGnB5C,QAAQC,IAAI2C,GACZ+L,GAAa,GACbN,EAAQzL,GACJA,GACFgM,IAPiB,2CAAH,qDAWZE,EAAe,SAAApI,GACnB,IAAMqI,EAAYrI,EAAMI,OAExB2H,GAAQ,SAAAzH,GACN,OAAO,eAAKA,EAAZ,eAAmB+H,EAAUlN,GAAKkN,EAAUhI,YAIhD,OACE,kBAAC,IAAMkF,SAAP,KACE,kBAAC+C,GAAA,EAAD,CAAe3P,UAAU,YACvB,kBAAC4P,GAAA,EAAD,4FAIA,kBAAC,EAAD,CACEvH,MAAM,gBACN7F,GAAG,WACH8F,SAAUmH,EACV/H,MAAO5D,EAAKmL,SACZhO,SAAUoO,IAEZ,kBAAC,EAAD,CACEhH,MAAM,cACN7F,GAAG,aACH8F,SAAUmH,EACV/H,MAAO5D,EAAKwI,WACZrL,SAAUoO,IAEZ,kBAAC,EAAD,CAAWhH,MAAM,UAAUX,MAAO/C,EAAmBb,EAAKiC,WAC1D,kBAAC,EAAD,CACEsC,MAAM,YACN7F,GAAG,QACH8F,SAAUmH,EACV/H,MAAO5D,EAAKqL,MACZlO,SAAUoO,KAGd,kBAACQ,GAAA,EAAD,KACE,kBAACzP,EAAA,EAAD,CACEL,QAAQ,YACRO,QAASiP,EACTlP,MAAM,UACNY,SAAUoO,GAJZ,UAQA,kBAACjP,EAAA,EAAD,CACEL,QAAQ,YACRO,QAASkP,EACTnP,MAAM,UACNY,SAAUgH,OAAOC,OAAOpE,GAAMgM,MAAK,SAAA1H,GAAG,OAAKA,MAAQiH,GAJrD,cC5EKU,GAAmB,SAAC,GAAoC,IAAlCpB,EAAiC,EAAjCA,SAAUzF,EAAuB,EAAvBA,QAAS8F,EAAc,EAAdA,QAAc,EAC1CxJ,IAAMC,SAAS,CACrC6G,WAAYpD,EAAQgD,YAAYI,WAChCvG,QAASmD,EAAQgG,MAAMhK,OAAO,GAAG,GAAGa,QACpCH,SAAU,KAJsD,mBAC3D9B,EAD2D,KACrDsL,EADqD,OAM5B5J,IAAMC,SAAS,IANa,mBAM3DuK,EAN2D,KAM9CC,EAN8C,OAOhCzK,IAAMC,UAAS,GAPiB,mBAO3D4J,EAP2D,KAOhDC,EAPgD,KASlE9J,IAAMoB,WAAU,WACdnC,IAAiBkI,MAAK,SAAApJ,GAAG,OAAI0M,EAAe1M,QAC3C,IAEH,IAAMgM,EAAe,WACnBH,EAAQ,CACN9C,WAAY,GACZvG,QAAS,GACTH,SAAU,KAEZ+I,EAASH,KAAI,IAGTgB,EAAY,uCAAG,4BAAArM,EAAA,6DACnBmM,GAAa,GADM,SAED5K,EAAQ,QAAS,OAAQZ,GAFxB,OAEbP,EAFa,OAGnB5C,QAAQC,IAAI2C,GACZ+L,GAAa,GACbN,EAAQzL,GACJA,GACFgM,IAPiB,2CAAH,qDAsBlB,OACE,kBAAC,IAAM3C,SAAP,KACE,kBAAC+C,GAAA,EAAD,CAAe3P,UAAU,YACvB,kBAAC4P,GAAA,EAAD,0EAGA,kBAAC,EAAD,CACEvH,MAAM,cACN7F,GAAG,aACHkF,MAAO5D,EAAKwI,WACZrL,SAAUoO,IAEZ,kBAAC,EAAD,CACEhH,MAAM,UACNX,MAAO/C,EAAmBb,EAAKiC,SAC/B9E,SAAUoO,IAEZ,kBAAC,EAAD,CACEjN,QAAS4N,EACT3N,YAAa,SAAA6N,GAAU,OAAIA,GAC3B7H,MAAM,sBACN9F,cAAe,SAAA8E,IAhCM,SAACA,EAAOQ,EAASL,EAAKM,GACjD,IAAIJ,EAAQL,EAAMI,OAAOC,MAEJ,kBAAVA,IACTA,EAAQL,EAAMI,OAAOM,WAEvBF,GAAQ,SAAAF,GACN,OAAO,eAAKA,EAAZ,eAAmBH,EAAME,GAAS,QA0B5BE,CAAqBP,EAAO+H,EAAS,aAEvCnO,SAAUoO,KAGd,kBAACQ,GAAA,EAAD,KACE,kBAACzP,EAAA,EAAD,CACEL,QAAQ,YACRO,QAASiP,EACTlP,MAAM,UACNY,SAAUoO,GAJZ,UAQA,kBAACjP,EAAA,EAAD,CACEL,QAAQ,YACRO,QAASkP,EACTnP,MAAM,UACNY,SAAUgH,OAAOC,OAAOpE,GAAMgM,MAAK,SAAA1H,GAAG,OAAKA,MAAQiH,GAJrD,aClFKc,GAAU,SAAC,GAAoC,IAAlCxB,EAAiC,EAAjCA,SAAmBK,GAAc,EAAvB9F,QAAuB,EAAd8F,SAAc,EACjCxJ,IAAMC,SAAS,CACrCjD,GAAI,GACJ2J,KAAM,GACNE,aAAc,KAJyC,mBAClDvI,EADkD,KAC5CsL,EAD4C,OAMvB5J,IAAMC,UAAS,GANQ,mBAMlD4J,EANkD,KAMvCC,EANuC,KAQnDC,EAAe,WACnBH,EAAQ,CACN5M,GAAI,GACJ2J,KAAM,GACNE,aAAc,KAEhBsC,EAASH,KAAI,IAGTgB,EAAY,uCAAG,8BAAArM,EAAA,6DACb2E,EAAM,CACVoE,YAAa,CAAE1J,GAAIsB,EAAKtB,GAAI2J,KAAKrI,EAAKqI,MACtCE,aAAcvI,EAAKuI,cAErBiD,GAAa,GALM,SAMD5K,EAAQ,OAAQ,OAAQoD,GANvB,OAMbvE,EANa,OAOnB5C,QAAQC,IAAI2C,GACZ+L,GAAa,GACbN,EAAQzL,GACJA,GACFgM,IAXiB,2CAAH,qDAeZE,EAAe,SAAApI,GACnB,IAAMqI,EAAYrI,EAAMI,OACxBiI,EAAUhI,MACS,iBAAjBgI,EAAUlN,IACV4N,OAAOV,EAAUhI,OAAS,GACN,KAApBgI,EAAUhI,MACN,EACAgI,EAAUhI,MAChB0H,GAAQ,SAAAzH,GACN,OAAO,eAAKA,EAAZ,eAAmB+H,EAAUlN,GAAKkN,EAAUhI,YAIhD,OACE,kBAAC,IAAMkF,SAAP,KACE,kBAAC+C,GAAA,EAAD,CAAe3P,UAAU,YACvB,kBAAC4P,GAAA,EAAD,wFAIA,kBAAC,EAAD,CACEvH,MAAM,UACN7F,GAAG,KACHkF,MAAO5D,EAAKtB,GACZ8F,SAAUmH,EACVxO,SAAUoO,IAEZ,kBAAC,EAAD,CACEhH,MAAM,oBACN7F,GAAG,OACHkF,MAAO5D,EAAKqI,KACZ7D,SAAUmH,EACVxO,SAAUoO,IAEZ,kBAAC,EAAD,CACEvJ,KAAK,SACLuC,MAAM,uBACNX,MAAO5D,EAAKuI,aACZ7J,GAAG,eACH8F,SAAUmH,EACVxO,SAAUoO,KAGd,kBAACQ,GAAA,EAAD,KACE,kBAACzP,EAAA,EAAD,CACEL,QAAQ,YACRO,QAASiP,EACTlP,MAAM,UACNY,SAAUoO,GAJZ,UAQA,kBAACjP,EAAA,EAAD,CACEL,QAAQ,YACRO,QAASkP,EACTnP,MAAM,UACNY,SACE6C,EAAKuI,cAAgB,GACrBpE,OAAOC,OAAOpE,GAAMgM,MAAK,SAAA1H,GAAG,OAAKA,MACjCiH,GAPJ,a,oBCzEFgB,GAASC,EAAQ,KAEVC,GAAoB,SAAC,GAAoC,IAAlC5B,EAAiC,EAAjCA,SAAUzF,EAAuB,EAAvBA,QAAS8F,EAAc,EAAdA,QAAc,EAC3CxJ,IAAMC,SAAS,CACrC6G,WAAYpD,EAAQgD,YAAYI,WAChCxG,KAAM,GACN0E,MAAO,KAJ0D,mBAC5D1G,EAD4D,KACtDsL,EADsD,KAM7D7J,EAAQ,CAAC,UAAW,IAAK,IAAK,IAAK,KAN0B,EAOnCC,IAAMC,SAAS,IAPoB,mBAO5DqG,EAP4D,KAOlDC,EAPkD,OAQjCvG,IAAMC,UAAS,GARkB,mBAQ5D4J,EAR4D,KAQjDC,EARiD,KAUnE9J,IAAMoB,WAAU,WACd,IAAI4J,EAAO,GACXtH,EAAQuH,UAAUC,SAAQ,SAAA3D,GACxByD,EAAKzD,GAAQ,MAEf4D,EAAYH,KACX,CAACtH,EAAQuH,YAEZ,IAAME,EAAc,SAAA7M,GAClBiI,GAAY,SAAApE,GACV,OAAO,eAAKA,EAAZ,GAAqB7D,OAUnB0L,EAAY,uCAAG,gCAAArM,EAAA,6DACbyN,EAAgB9E,EAEtB7D,OAAO8C,KAAK6F,GAAeF,SAAQ,SAAA3D,GACV,KAAnBjB,EAASiB,WACJ6D,EAAc7D,MAGnBjF,EARa,eASdhE,EATc,CAUjB+M,cAAeD,IAEjBtB,GAAa,GAZM,SAaD5K,EAAQ,WAAY,QAASoD,GAb5B,OAabvE,EAba,OAcnB5C,QAAQC,IAAI2C,GACZ+L,GAAa,GACbN,EAAQzL,GACJA,GACFgM,IAlBiB,4CAAH,qDAsBZA,EAAe,WACnBH,EAAQ,CACN9C,WAAY,GACZxG,KAAM,GACN0E,MAAO,KAETmE,EAASH,KAAI,IAWTsC,EAAmB,SAAAzJ,GACvB,IAAMqI,EAAYrI,EAAMI,OACxBkJ,EAAY,eAAGjB,EAAUlN,GAAKkN,EAAUhI,SAc1C,OACE,kBAAC,IAAMkF,SAAP,KACE,kBAAC+C,GAAA,EAAD,CAAe3P,UAAU,YACvB,kBAAC4P,GAAA,EAAD,4EAGA,kBAAC,EAAD,CACEvH,MAAM,cACN7F,GAAG,aACHkF,MAAO5D,EAAKwI,WACZrL,SAAUoO,IAEZ,kBAAC,EAAD,CACEjN,QAASmD,EACTlD,YAAasC,EACb0D,MAAM,mBACN9F,cAAe,SAAA8E,IA3BM,SAACA,EAAOQ,EAASL,EAAKM,GACjD,IAAIJ,EAAQL,EAAMI,OAAOC,MAEJ,kBAAVA,IACTA,EAAQL,EAAMI,OAAOM,WAEvBF,GAAQ,SAAAF,GACN,OAAO,eAAKA,EAAZ,eAAmBH,EAAME,GAAS,QAqB5BE,CAAqBP,EAAO+H,EAAS,SAEvCnO,SAAUoO,IAEZ,kBAAC0B,GAAA,EAAD,CACEC,YAAY,QACZC,QAAS,EACTC,QAAS,EACT1O,GAAG,QACH8F,SAlDa,SAAAjB,GACnB,IAAMqI,EAAYrI,EAAMI,OAExB2H,GAAQ,SAAAzH,GACN,OAAO,eAAKA,EAAZ,eAAmB+H,EAAUlN,GAAKkN,EAAUhI,YA+CxC1H,UAAU,WACViB,SAAUoO,IAEZ,kBAACpP,EAAA,EAAD,CAAKgC,GAAI,EAAGjC,UAAU,YACpB,kBAACyK,GAAA,EAAD,CAAgBzK,UAAU,mBACxB,kBAAC0K,GAAA,EAAD,CAAOY,KAAK,QAAQ6F,cAAY,GAC9B,kBAACxG,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,wBACA,kBAACA,GAAA,EAAD,sBAGJ,kBAACC,GAAA,EAAD,KACG7C,OAAO8C,KAAKe,GAAUhH,KAAI,SAAAsM,GAAO,OAChC,kBAACxG,GAAA,EAAD,CAAUpD,IAAK4J,GACb,kBAACvG,GAAA,EAAD,KACGuG,EAAQpG,SAAS,WAAa,KAAOoG,GAExC,kBAACvG,GAAA,EAAD,KACE,kBAAC5K,EAAA,EAAD,CAAKD,UAAU,kBACb,kBAACqR,GAAA,EAAD,CACEL,YAAY,UACZxO,GAAI4O,EACJ1J,MAAOoE,EAASsF,GAChB9I,SAAUwI,EACV7P,SAAUoO,cAU5B,kBAACjP,EAAA,EAAD,CACEL,QAAQ,WACRO,QA7HQ,WACd,IAAMkC,EAAK6N,GAAOiB,YAAY,GAAGC,SAAS,OACpCf,EAAI,gCAAgBhO,GAAO,IACjCmO,EAAYH,IA2HNgB,UAAW,kBAAC,KAAD,MACXvQ,SAAUoO,GAJZ,aASF,kBAACQ,GAAA,EAAD,KACE,kBAACzP,EAAA,EAAD,CACEL,QAAQ,YACRO,QAASiP,EACTlP,MAAM,UACNY,SAAUoO,GAJZ,UAQA,kBAACjP,EAAA,EAAD,CACEL,QAAQ,YACRO,QAASkP,EACTnP,MAAM,UACNY,SAAUgH,OAAOC,OAAOpE,GAAMgM,MAAK,SAAA1H,GAAG,OAAKA,MAAQiH,GAJrD,aChLKoC,GAAe,SAAC,GAA+C,IAA7C9C,EAA4C,EAA5CA,SAAUzF,EAAkC,EAAlCA,QAAS7D,EAAyB,EAAzBA,UAAW2J,EAAc,EAAdA,QAAc,EACjDxJ,IAAMC,SAAS,CACrC6G,WAAYpD,EAAQgD,YAAYI,WAChCvG,QAAS,KAH8D,mBAClEjC,EADkE,KAC5DsL,EAD4D,OAKvC5J,IAAMC,UAAS,GALwB,mBAKlE4J,EALkE,KAKvDC,EALuD,KAMnEC,EAAe,WACnBH,EAAQ,CACN9C,WAAY,GACZvG,QAAS,KAEX4I,EAASH,KAAI,IAGTkD,EAAcrM,EAAUoD,KAAKkJ,QACjC,SAAA5L,GAAO,OAAIA,IAAYmD,EAAQgG,MAAMhK,OAAO,GAAG,GAAGa,WAG9CyJ,EAAY,uCAAG,4BAAArM,EAAA,6DACnBmM,GAAa,GADM,SAED5K,EAAQ,QAAS,QAASZ,GAFzB,OAEbP,EAFa,OAGnB5C,QAAQC,IAAI2C,GACZ+L,GAAa,GACbN,EAAQzL,GACJA,GACFgM,IAPiB,2CAAH,qDAsBlB,OACE,kBAAC,IAAM3C,SAAP,KACE,kBAAC+C,GAAA,EAAD,CAAe3P,UAAU,YACvB,kBAAC4P,GAAA,EAAD,4DAGA,kBAAC,EAAD,CACEvH,MAAM,cACN7F,GAAG,aACHkF,MAAO5D,EAAKwI,WACZrL,SAAUoO,IAEZ,kBAAC,EAAD,CACEjN,QAASsP,EACTrP,YAAasC,EACb0D,MAAM,UACN9F,cAAe,SAAA8E,IA3BM,SAACA,EAAOQ,EAASL,EAAKM,GACjD,IAAIJ,EAAQL,EAAMI,OAAOC,MAEJ,kBAAVA,IACTA,EAAQL,EAAMI,OAAOM,UAAUC,eAEjCH,GAAQ,SAAAF,GACN,OAAO,eAAKA,EAAZ,eAAmBH,EAAME,GAAS,QAqB5BE,CAAqBP,EAAO+H,EAAS,YAEvCnO,SAAUoO,KAGd,kBAACQ,GAAA,EAAD,KACE,kBAACzP,EAAA,EAAD,CACEL,QAAQ,YACRO,QAASiP,EACTlP,MAAM,UACNY,SAAUoO,GAJZ,UAQA,kBAACjP,EAAA,EAAD,CACEL,QAAQ,YACRO,QAASkP,EACTnP,MAAM,UACNY,SAAUgH,OAAOC,OAAOpE,GAAMgM,MAAK,SAAA1H,GAAG,OAAKA,MAAQiH,GAJrD,aCzEKuC,GAAc,SAAC,GAAoC,IAAlCjD,EAAiC,EAAjCA,SAAUzF,EAAuB,EAAvBA,QAAS8F,EAAc,EAAdA,QAAc,EACrCxJ,IAAMC,SAAS,CACrC6G,WAAYpD,EAAQgD,YAAYI,WAChCC,MAAO,KAHoD,mBACtDzI,EADsD,KAChDsL,EADgD,OAK3B5J,IAAMC,UAAS,GALY,mBAKtD4J,EALsD,KAK3CC,EAL2C,KAMvDC,EAAe,WACnBH,EAAQ,CACN9C,WAAY,GACZC,MAAO,KAEToC,EAASH,KAAI,IAGTgB,EAAY,uCAAG,4BAAArM,EAAA,6DACnBmM,GAAa,GADM,SAED5K,EAAQ,SAAU,OAAQZ,GAFzB,OAEbP,EAFa,OAGnB5C,QAAQC,IAAI2C,GACZ+L,GAAa,GACbN,EAAQzL,GACJA,GACFgM,IAPiB,2CAAH,qDAsBlB,OACE,kBAAC,IAAM3C,SAAP,KACE,kBAAC+C,GAAA,EAAD,CAAe3P,UAAU,YACvB,kBAAC4P,GAAA,EAAD,6EAGA,kBAAC,EAAD,CACEvH,MAAM,cACN7F,GAAG,aACHkF,MAAO5D,EAAKwI,WACZrL,SAAUoO,IAEZ,kBAAC,EAAD,CACEvJ,KAAK,SACLuC,MAAM,eACNX,MAAO5D,EAAKyI,MACZ/J,GAAG,QACH8F,SA5Ba,SAAAjB,GACnB,IAAMqI,EAAYrI,EAAMI,OAClBnD,EACJ8L,OAAOV,EAAUhI,OAAS,GAAyB,KAApBgI,EAAUhI,MACrC,EACAgI,EAAUhI,MAChB0H,GAAQ,SAAAzH,GACN,OAAO,eAAKA,EAAZ,eAAmB+H,EAAUlN,GAAK8B,QAsB9BrD,SAAUoO,KAGd,kBAACQ,GAAA,EAAD,KACE,kBAACzP,EAAA,EAAD,CACEL,QAAQ,YACRO,QAASiP,EACTlP,MAAM,UACNY,SAAUoO,GAJZ,UAQA,kBAACjP,EAAA,EAAD,CACEL,QAAQ,YACRO,QAASkP,EACTnP,MAAM,UACNY,SAAU6C,EAAKyI,OAAS,GAAKtE,OAAOC,OAAOpE,GAAMgM,MAAK,SAAA1H,GAAG,OAAKA,MAAQiH,GAJxE,aC3CR,SAASwC,GAAS7P,GAAQ,IAChBX,EAAqCW,EAArCX,SAAUqG,EAA2B1F,EAA3B0F,MAAO8D,EAAoBxJ,EAApBwJ,MAAUsG,EADZ,YACsB9P,EADtB,8BAGvB,OACE,kBAAClC,EAAA,EAAD,eACEiS,UAAU,MACVC,KAAK,WACLC,OAAQvK,IAAU8D,EAClBhJ,GAAE,4BAAuBgJ,GACzBqD,kBAAA,uBAAiCrD,GACjCxL,UAAU,mBACN8R,GAEHpK,IAAU8D,GACT,kBAACvL,EAAA,EAAD,CAAKiS,EAAG,EAAGlS,UAAU,uBAClBqB,IAoBX,IAAM8Q,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,YAAY,aAAD,OAAeF,EAAMG,QAAQC,SACxCpS,MAAOgS,EAAMG,QAAQE,KAAKC,KAC1BC,SAAU,WAIRC,GAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAWzR,EAAd,EAAcA,SAAd,OACjByR,EACEzR,EAEA,kBAAC3B,EAAA,EAAD,CAAQC,SAAS,SAASU,MAAM,eAC7BgB,IAID0R,GAAgB,CACpBhD,oBACAQ,qBACAJ,WACApB,oBACA0C,gBACAG,gBAGWoB,GAAW,SAAC,GAAwC,IAAtC3T,EAAqC,EAArCA,UAAWiG,EAA0B,EAA1BA,SAAUD,EAAgB,EAAhBA,UACxCoE,EAAU0I,KAD8C,EAEpC3M,IAAMC,SAAS,GAFqB,mBAEvDiC,EAFuD,KAEhDyB,EAFgD,OAG9B3D,IAAMC,UAAS,GAHe,mBAGvDwN,EAHuD,KAG7CC,EAH6C,OAItC1N,IAAMC,SAAS,IAJuB,mBAIvD3B,EAJuD,KAIjDsL,EAJiD,OAK1C5J,IAAMC,UAAS,GAL2B,mBAMxDyH,EAAQ,CAAE1G,KAN8C,KAMxCgI,IANwC,QAOtChJ,IAAMC,SAAS,IAPuB,mBAOvD0N,EAPuD,KAOjD/F,EAPiD,OAQtB5H,IAAMC,UAAS,GARO,mBAQvD2N,EARuD,KAQzCC,EARyC,OASxB7N,IAAMC,SAAS,MATS,mBASvD6N,EATuD,KAS1CC,EAT0C,OAUhC/N,IAAMC,UAAS,GAViB,mBAUvDoG,EAVuD,KAU9C2H,EAV8C,OAWhChO,IAAMC,UAAS,GAXiB,mBAWvDuG,EAXuD,KAW9CC,EAX8C,KAkBxD7E,EAAc,SAACC,EAAOC,GACX,cAAXA,IAGJ+L,GAAgB,GAChB1P,YAAW,kBAAM4P,EAAe,QAAO,OAczC/N,IAAMoB,WAAU,WACd,SAAS6M,IACHlT,OAAOmT,YAAc,MAAQT,EAC/BC,GAAY,GACH3S,OAAOmT,WAAa,KAAOT,GACpCC,GAAY,GAKhB,OAFAO,IACAlT,OAAOoT,iBAAiB,SAAUF,GAC3B,SAAAG,GACLrT,OAAOsT,oBAAoB,SAAUJ,MAEtC,CAACR,IAGJzN,IAAMoB,WAAU,WACd,GAAKvH,EAuCH4M,GAAW,GACX1H,EAAYe,EAASlC,KAAK6L,SAAS9J,KAAK,MACrCwH,MAAK,SAAApJ,GACJ6L,EAAQ7L,GACR5C,QAAQC,IAAI2C,GACZ0I,GAAW,MAEZ6H,OAAM,SAAA/J,GACLpJ,QAAQC,IAAImJ,GACZqF,EAAQ,WAhDE,CAEdA,EACE,IAAI2E,MAAM,IAAIC,KAAK,CACjB9H,YAAa,CACX+C,SAAU,0BACV3C,WAAY,SACZ6C,MAAO,yDAET8E,oBARe,CAAC,IAAK,IAAK,IAAK,KAQCnP,KAAI,SAAAgB,GAClC,MAAO,CACLA,KAAMA,EACNoO,kBAAmB,IAAIzH,KACvB0H,mBAAoB/K,KAAKgL,MAAsB,IAAhBhL,KAAKiL,UACpCC,SAAU,QAGdC,YAAanL,KAAKgL,MAAsB,IAAhBhL,KAAKiL,UAC7BnF,MAAO,CACL,CACEnJ,QAAS,kBACTyO,aAAc,IAAI/H,KAClBgI,SAAU,OAGdhE,UAAW,CAAC,YACZT,YAAa,GACb0E,mBAAoB,IAAIX,MAAM,GAAGC,KAAK,CACpC3J,KAAM,IAAIoC,KACV3G,KAAM,UACN0E,MAAO,0BACPX,cAAezF,KAAKC,UAAU,CAC5BsQ,QAAS,YACT,eAAgB,0BAkBzB,CAACtV,EAAWiG,EAASlC,KAAK6L,SAAUpD,IAGvC,IAAM+I,EAAgB7B,GAAcI,EAAKtO,MAAM,KAAKM,KAAK,KAEzD,OACE,yBACEnF,UAAS,wBACNiT,EAAgC,iBAArB,qBAGd,kBAAC,GAAD,CAAYH,WAAYG,GACtB,kBAAC4B,EAAA,EAAD,CACEC,YAAc7B,EAAwB,aAAb,WACzBlT,QAAQ,aACR2H,MAAOA,EACPY,SA5Ga,SAACjB,EAAO0N,GAC3B5L,EAAS4L,IA4GH/U,UAAWyJ,EAAQ6I,WAETxF,IAAThJ,GACCA,EAAKgB,KAAI,SAACgD,EAAK0D,GAAN,OACP,kBAACwJ,EAAA,EAAD,eACE3M,MAAOP,EAAIoE,YAAYI,WACvB9E,IAAG,eAAUgE,IAjK7B,SAAmBA,GACjB,MAAO,CACLhJ,GAAG,gBAAD,OAAkBgJ,GACpB,gBAAgB,qBAAhB,OAAsCA,IA+JtByJ,CAAUzJ,eAKdsB,IAAThJ,IAAkC,IAAZkI,EACrBlI,EAAKgB,KAAI,SAACgD,EAAK0D,GAEb,OACE,kBAACqG,GAAD,CAAUnK,MAAOA,EAAO8D,MAAOA,EAAOhE,IAAG,kBAAagE,IACpD,kBAACvL,EAAA,EAAD,CAAKD,UAAU,wBACb,kBAACF,EAAA,EAAD,CAAYC,QAAQ,MAAM+H,EAAIoE,YAAY+C,UAC1C,kBAACnP,EAAA,EAAD,CAAYC,QAAQ,MAApB,uBAA0C+H,EAAIoE,YAAYI,aAC1D,kBAACxM,EAAA,EAAD,CAAYC,QAAQ,MAApB,mBAAsC4E,EACpCmD,EAAIoH,MAAMpH,EAAIoH,MAAMlC,OAAS,GAAGjH,WAElC,kBAACjG,EAAA,EAAD,CAAYC,QAAQ,MAApB,wBAA2C+H,EAAIyM,cAC/C,kBAAC,GAAD,CACErJ,SAAUpD,EAAIoH,MACd/D,QAAS,CACPpF,QAAS,UACTyO,aAAc,gBACdC,SAAU,aAEZrJ,OAAO,KAGX,kBAACnL,EAAA,EAAD,CAAKD,UAAU,sBACb,yBACEkV,IAAKpN,EAAIoE,YAAYiD,MACrBgG,IAAG,UAAKrN,EAAIoE,YAAY+C,SAArB,YAAiCnH,EAAIoE,YAAYI,eAGxD,kBAACrM,EAAA,EAAD,CAAKgC,GAAI,EAAGjC,UAAU,iBACpB,kBAACF,EAAA,EAAD,CAAYC,QAAQ,MAApB,sBACA,kBAACE,EAAA,EAAD,CAAKmV,GAAI,GACNtN,EAAImM,oBAAoBnP,KAAI,SAAAuQ,GAC3B,OACE,kBAAC,GAAD,CACErM,MAAOqM,EAAYlB,mBACnBlL,IACEoM,EAAYlB,mBAAqBkB,EAAYf,SAE/CpL,QAASpB,EAAIyM,YACblM,MAAK,UAAKgN,EAAYvP,KAAjB,oCACHsE,KAAOiL,EAAYnB,mBAAmBzI,UAClCrB,KAAOiL,EAAYnB,mBAAmB5J,OACpC,cAEF,OAEN9C,IAAK6N,EAAYvP,YAM3B,kBAAC7F,EAAA,EAAD,CAAKgC,GAAI,EAAGjC,UAAU,iBACpB,kBAACF,EAAA,EAAD,CAAYC,QAAQ,MAApB,oBACA,kBAACE,EAAA,EAAD,CAAKmV,GAAI,GACNtN,EAAI2I,UAAUzD,OAAS,GACtB,kBAAC,GAAD,CAAgBpB,MAAO9D,EAAI2I,UAAW5E,QAASA,MAIrD,kBAAC5L,EAAA,EAAD,CAAKgC,GAAI,EAAGjC,UAAU,iBACpB,kBAACF,EAAA,EAAD,CAAYC,QAAQ,MAApB,uBACC+H,EAAI4M,mBAAmB1H,OAAS,GAC/B,kBAAC/M,EAAA,EAAD,CAAKmV,GAAI,GACNtN,EAAI4M,mBAAmB5P,KAAI,SAAC8E,EAAQ4B,GAAT,OAC1B,kBAAC,GAAD,CAAwB5B,OAAQA,EAAQpC,IAAKgE,aAS3D,yBAAKxL,UAAU,6BACZgM,EACC,kBAACa,EAAA,EAAD,MAEA,kBAACyI,EAAA,EAAD,CAAYhV,QAAS,kBAAMkT,GAAW,SAAA7L,GAAI,OAAKA,OAC7C,kBAAC,KAAD,CAAa0G,MAAO,CAAExO,SAAU,QAKxC,kBAAC,GAAD,CACEsN,MAA8B,kBAAvB7H,EAASlC,KAAK0C,KACrBoH,MAAOA,EACPE,QAASA,IAEX,kBAAC,GAAD,CAAOuB,SAAUzB,EAAOpM,MAAOqS,GAC5BA,GACC,kBAACyB,EAAD,CACEjG,SAAUzB,EACVhE,QAASpF,EAAK4D,GACdrC,UAAWA,EACX2J,QA1MkB,SAAAzL,GAC1B8P,GAAgB,GAChBE,EAAehQ,GACXA,GAEFiQ,GAAW,SAAA7L,GAAI,OAAKA,SAyMpB,kBAACe,EAAA,EAAD,CACElC,KAAM4M,EACNzK,iBAAkB,IAClBC,QAASxB,GAET,kBAAC,IAAD,CACEyB,UAAW,EACX9I,QAAQ,SACR6I,QAASxB,EACT0B,SAAUwK,EAAc,UAAY,SAEnCA,EAAc,yBAA2B,yBCpSrCiC,OAxCf,WAAgB,IAAD,EACqB/P,IAAMC,UAAS,GADpC,mBACNpG,EADM,KACKmW,EADL,OAEWhQ,IAAMC,SAAS,IAF1B,mBAENgD,EAFM,KAEAgN,EAFA,KAGPpQ,EAAY,CAAEoD,OAAMgN,WAHb,EAIWjQ,IAAMC,SAAS,IAJ1B,mBAINrC,EAJM,KAKP2D,EAAO,CAAE3D,OAAM4D,QALR,MAqBb,OAdAxB,IAAMoB,WAAU,WACdhD,IACG+I,MAAK,SAAApJ,GACJ5C,QAAQC,IAAI2C,GACZkS,EAAQlS,GACRiS,GAAa,MAEd1B,OAAM,SAAA/J,GACLpJ,QAAQC,IAAImJ,GACZyL,GAAa,GACbC,EAAQ,CAAC,aAAc,MAAO,SAAU,eAE3C,IAGD,kBAAC,IAAM7I,SAAP,KACE,kBAAC,EAAD,CAAevN,UAAWA,IAC1B,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOqW,KAAK,aACoB,IAA7BzN,OAAO8C,KAAK3H,GAAM4J,OACjB,kBAAC,IAAD,CAAU2I,GAAG,MAEb,kBAAC,GAAD,CAAUtW,UAAWA,EAAWiG,SAAUyB,EAAM1B,UAAWA,KAG/D,kBAAC,IAAD,CAAOqQ,KAAK,KACV,kBAAC,EAAD,CAAOrW,UAAWA,EAAWgG,UAAWA,EAAWC,SAAUyB,QC5BnD6O,QACW,cAA7BrV,OAAOf,SAASqW,UAEe,UAA7BtV,OAAOf,SAASqW,UAEhBtV,OAAOf,SAASqW,SAASC,MACvB,2D,iCCTAC,GAAYC,aAAe,CAC/BxD,QAAS,CACP1M,KAAM,OACN4M,KAAM,CACJC,KAAM,SAGVsD,UAAW,CACTC,aAAc,CACZxM,KAAM,CACJ,YAAa,CACXrJ,MAAO,WAIb8V,WAAY,CACVC,QAAS,CACPvW,SAAU,WAMlBwW,IAASC,OACP,kBAACC,GAAA,EAAD,CAAelE,MAAO0D,IACpB,kBAAC,KAAD,CAAQS,SAAS,KACf,kBAAC,GAAD,QAGJC,SAASC,eAAe,SD6FpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBlK,MAAK,SAAAmK,GACJA,EAAaC,gBAEdjD,OAAM,SAAAvL,GACL5H,QAAQ4H,MAAMA,EAAM7B,a","file":"static/js/main.ae96f9a3.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  Button,\n  Box,\n  Tooltip\n} from \"@material-ui/core\";\nimport FlightTakeoffIcon from \"@material-ui/icons/FlightTakeoff\";\nimport RssFeedIcon from \"@material-ui/icons/RssFeed\";\nimport \"./NavigationBar.css\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nexport const NavigationBar = ({ connected }) => {\n  const history = useHistory();\n  const location = useLocation();\n  const logout = () => {\n    window.sessionStorage.removeItem('jwt');\n    history.push(\"/\");\n    console.log(\"logout callback\");\n  };\n\n  return (\n    <AppBar position=\"sticky\">\n      <Toolbar>\n        <FlightTakeoffIcon fontSize=\"large\" />\n        <Typography variant=\"h6\" className=\"heading-web\">\n          Airline MRO + Hyperledger Fabric\n        </Typography>\n        <Typography variant=\"h6\" className=\"heading-mobile\">\n          Airline MRO\n        </Typography>\n        <Box px={2}>\n          {location.pathname === \"/aircraft\" && (\n            <Button color=\"inherit\" onClick={logout}>\n              Logout\n            </Button>\n          )}\n        </Box>\n        <Tooltip title={connected ? \"Network Connected\" : \"Not Connected\"}>\n          <RssFeedIcon color={connected ? \"inherit\" : \"secondary\"} />\n        </Tooltip>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default NavigationBar;\n","import React from \"react\";\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  CardActions,\n  Button,\n  Box\n} from \"@material-ui/core\";\nimport \"./LoginCard.css\";\n\nexport const LoginCard = ({\n  heading,\n  onClick,\n  disabled,\n  buttonText,\n  switchText,\n  toggleClick,\n  children\n}) => {\n  return (\n    <Box mt={6} mx={5} className=\"loginCard-container\">\n      <Card raised={true} className=\"loginCard-card\">\n        <CardHeader title={heading} className=\"loginCard-center\" />\n        <CardContent className=\"loginCard-content loginCard-center\">\n          {children}\n        </CardContent>\n        <CardActions className=\"loginCard-center\">\n          <Box mb={1}>\n            <Button onClick={toggleClick}>\n              {switchText}\n            </Button>\n          </Box>\n          <Button\n            fullWidth={true}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={onClick}\n            disabled={disabled}\n            className=\"loginCard-mainButton\"\n          >\n            {buttonText}\n          </Button>\n        </CardActions>\n      </Card>\n    </Box>\n  );\n};\n\nexport default LoginCard;\n","import React from \"react\";\nimport { TextField, Box } from \"@material-ui/core\";\nimport \"./TextInput.css\";\n\nexport const TextInput = ({ ...props }) => {\n  return (\n    <Box my={1} className=\"boxWidth\">\n      <TextField {...props} variant=\"outlined\" fullWidth={true}/>\n    </Box>\n  );\n};\n","import React from \"react\";\nimport { TextInput } from \"../TextInput/TextInput\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport \"./AutoCompleteText.css\"\n\nexport const AutoCompleteText = ({\n  options,\n  optionLabel,\n  freeSolo = false,\n  onInputChange,\n  id,\n  ...props\n}) => {\n  return (\n    <Autocomplete\n      options={options}\n      getOptionLabel={optionLabel}\n      freeSolo={freeSolo}\n      onInputChange={onInputChange}\n      className=\"autoCompleteContainer\"\n      renderInput={params => <TextInput {...params} {...props} />}\n    />\n  );\n};\n","const address = \"https://35.193.103.180:3000/\";\n\nconst getToken = () => {\n  const token = window.sessionStorage.getItem(\"jwt\");\n  return token;\n};\n\nconst postHeader = () => {\n  return {\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${getToken()}`\n  };\n};\n\nconst maxAttempts = 3;\n\nconst fetchLoop = async (endpoint, info = {}) => {\n  let res;\n  for (let i = 0; i < maxAttempts; i++) {\n    res = await fetch(endpoint, info);\n    if (res.status === 200) {\n      break;\n    }\n    await new Promise(r => setTimeout(r, 1000)); //delay\n  }\n  return res;\n};\n\nexport const getCompanies = async () => {\n  const res = await fetchLoop(address);\n  const data = await res.json();\n  return data;\n};\n\nexport const getUser = async (postType, params) => {\n  params.postType = postType;\n  const res = await fetchLoop(address + \"login\", {\n    method: \"POST\",\n    headers: postHeader(),\n    body: JSON.stringify(params)\n  });\n  console.log(res);\n\n  if (postType === \"login\") {\n    const output = await res.json();\n    return output;\n  } else {\n    return res.status === 200;\n  }\n};\n\nexport const getAircraft = async id => {\n  try {\n    const res = await fetchLoop(address + `aircraft?id=${id}`);\n    const data = await res.json();\n    return data;\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport const getPart = async id => {\n  try {\n    const res = await fetchLoop(address + `part?id=${id}`);\n    const data = await res.json();\n    return data;\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport const getMaintainers = async () => {\n  try {\n    const res = await fetchLoop(address + \"admin\", {\n      method: \"GET\",\n      headers: postHeader()\n    });\n    const data = await res.json();\n    return data;\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport const callAPI = async (endpoint, method, data) => {\n  try {\n    const res = await fetchLoop(address + endpoint, {\n      method,\n      headers: postHeader(),\n      body: JSON.stringify(data)\n    });\n    return res.status === 200;\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport default getCompanies;\n","export const wordCapitalization = phrase => {\n  return phrase\n    .split(\" \")\n    .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n    .join(\" \");\n};\n\nexport default wordCapitalization;\n","import React from \"react\";\nimport \"./Login.css\";\nimport { Snackbar } from \"@material-ui/core\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { LoginCard } from \"../../components/LoginCard/LoginCard\";\nimport { TextInput } from \"../../components/TextInput/TextInput\";\nimport { AutoCompleteText } from \"../../components/AutoCompleteText/AutoCompleteText\";\nimport { useHistory } from \"react-router-dom\";\nimport { getUser } from \"../../scripts/hyperledger.js\";\nimport { wordCapitalization } from \"../../scripts/wordManipulation.js\";\n\nexport const Login = ({ connected, companies, userData }) => {\n  const history = useHistory();\n  const types = [\"Administrator\", \"Maintainer\"];\n  const [register, setRegister] = React.useState(false);\n  const [userPass, setUserPass] = React.useState({\n    username: \"\",\n    password: \"\",\n    type: \"\",\n    company: \"\"\n  });\n  const [validatedPass, setValidatedPass] = React.useState(\"\");\n  const [validate, setValidate] = React.useState(false);\n  const [apiCalled, setAPIcalled] = React.useState(false);\n  const [open, setOpen] = React.useState(false);\n  const [message, setMessage] = React.useState(\"\");\n\n  //on password change, check validation\n  React.useEffect(() => {\n    setValidate(!!validatedPass && userPass.password !== validatedPass);\n  }, [userPass.password, validatedPass]);\n\n  //function for handling login procedures\n  const loginHandle = async () => {\n    console.log(\"login click\");\n    const data = userPass;\n    delete data.verified; // remove extra key value pair\n    try {\n      const res = connected ? await getUser(\"login\", data) : {user: {type: userPass.type}}; //offline response depending on connected\n      console.log(res);\n      userData.setInfo(res.user);\n      window.sessionStorage.setItem(\"jwt\", res.jwtToken);\n      history.push(\"/aircraft\");\n    } catch (e) {\n      //display error message\n      setMessage(\"Error signing in\");\n      setOpen(true);\n    }\n  };\n\n  //function for handling register procedures\n  const registerHandle = async () => {\n    console.log(\"register click\");\n    setAPIcalled(true);\n    const data = userPass;\n    delete data.verified; // remove extra key value pair\n    const res = connected ? await getUser(\"register\", data) : true;\n    setAPIcalled(false);\n    console.log(res);\n\n    if (res) {\n      loginHandle();\n    } else {\n      //error registering\n      setMessage(\"Error registering\");\n      setOpen(true);\n    }\n  };\n\n  //handle closing of snackbar\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpen(false);\n  };\n\n  //handle form inputs\n  const onChangeUserPass = event => {\n    const key = event.target.id;\n    const value = event.target.value;\n    setUserPass(prev => {\n      return { ...prev, [key]: value };\n    });\n  };\n\n  //handle autocomplete form sections\n  const autocompleteOnChange = (event, handler, key, obj) => {\n    let value = event.target.value;\n    // console.log(value);\n    if (typeof value === \"number\") {\n      value = event.target.innerText.toLowerCase();\n    }\n    handler(prev => {\n      return { ...prev, [key]: value || \"\" };\n    });\n  };\n\n  return (\n    <div className=\"login-container\">\n      <LoginCard\n        heading={register ? \"Register User\" : \"User Login\"}\n        switchText={\n          register ? \"Existing users sign in\" : \"New users register here\"\n        }\n        onClick={register ? registerHandle : loginHandle}\n        disabled={\n          !Object.values(userPass).every(val => !!val) ||\n          apiCalled ||\n          validate ||\n          (register && !validatedPass)\n        }\n        buttonText={register ? \"Register\" : \"Login\"}\n        toggleClick={() => setRegister(!register)}\n      >\n        <TextInput\n          label=\"Username\"\n          onChange={onChangeUserPass}\n          id=\"username\"\n          value={userPass.username}\n        />\n        <TextInput\n          label=\"Password\"\n          type=\"password\"\n          onChange={onChangeUserPass}\n          id=\"password\"\n          value={userPass.password}\n        />\n        {register && (\n          <TextInput\n            label=\"Confirm password\"\n            type=\"password\"\n            id=\"verified\"\n            onChange={event => setValidatedPass(event.target.value)}\n            disabled={!userPass.password}\n            error={validate}\n            helperText={validate ? \"passwords do not match\" : \"\"}\n          />\n        )}\n        <AutoCompleteText\n          options={types}\n          optionLabel={wordCapitalization}\n          label=\"Role\"\n          onInputChange={event => {\n            autocompleteOnChange(event, setUserPass, \"type\", types);\n          }}\n        />\n        <AutoCompleteText\n          options={companies.list}\n          optionLabel={wordCapitalization}\n          label=\"Company\"\n          freeSolo={userPass.type === \"administrator\" && register}\n          onInputChange={event => {\n            autocompleteOnChange(event, setUserPass, \"company\", companies.list);\n          }}\n        />\n      </LoginCard>\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <MuiAlert\n          elevation={6}\n          variant=\"filled\"\n          onClose={handleClose}\n          severity=\"error\"\n        >\n          {message}\n        </MuiAlert>\n      </Snackbar>\n    </div>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport { Box, LinearProgress, Tooltip } from \"@material-ui/core\";\nimport \"./ProgressBar.css\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport ErrorOutlineIcon from \"@material-ui/icons/ErrorOutline\";\n\nexport const ProgressBar = ({ start, end, current, label }) => {\n  const [value, setValue] = React.useState(0);\n\n  setTimeout(() => {\n    setValue(Math.min(((current - start) / (end - start)) * 100, 100));\n  }, 1000);\n\n  return (\n    <Box className=\"bar-container\">\n      <Box pr={2} className=\"bar-label\">\n        {label}\n      </Box>\n      <Tooltip arrow={true} title={start}>\n        <CheckCircleIcon\n          color={value < 75 ? \"primary\" : \"secondary\"}\n          fontSize=\"large\"\n        />\n      </Tooltip>\n      <Tooltip arrow={true} title={current}>\n        <LinearProgress\n          color={value < 75 ? \"primary\" : \"secondary\"}\n          variant=\"determinate\"\n          value={value}\n          classes={{ root: \"bar-indicator\" }}\n        />\n      </Tooltip>\n      <Tooltip arrow={true} title={end}>\n        {value < 95 ? (\n          <ErrorOutlineIcon color=\"disabled\" fontSize=\"large\" />\n        ) : (\n          <ErrorIcon color=\"secondary\" fontSize=\"large\" />\n        )}\n      </Tooltip>\n    </Box>\n  );\n};\n\n// \"action\",\"disabled\",\"error\",\"inherit\",\"primary\",\"secondary\"\n","import React from \"react\";\nimport {\n  Typography,\n  ExpansionPanel,\n  ExpansionPanelSummary,\n  ExpansionPanelDetails,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow\n} from \"@material-ui/core\";\nimport \"./MaintenanceRecordPanel.css\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { wordCapitalization } from \"../../scripts/wordManipulation.js\";\nimport moment from \"moment\";\n\nexport const MaintenanceRecordPanel = ({ report }) => {\n  try {\n    report.partsReplaced = JSON.parse(report.partsReplaced);\n    report.partsReplaced = JSON.parse(report.partsReplaced); //sometimes requires a second parse\n  } catch (e) {\n    // console.log(e);\n  }\n  // console.log(report);\n  return (\n    <ExpansionPanel>\n      <ExpansionPanelSummary\n        expandIcon={<ExpandMoreIcon />}\n        aria-controls=\"panel1a-content\"\n        id=\"panel1a-header\"\n      >\n        <Typography>{moment(report.date).format(\"D MMM YYYY\")}</Typography>\n        <Typography className=\"expansion-secondLabel\">\n          {`Maintenance Type: ${wordCapitalization(report.type)}`}\n        </Typography>\n      </ExpansionPanelSummary>\n      <ExpansionPanelDetails className=\"expansionPanel-center\">\n        <Typography>{`Notes: ${report.notes}`}</Typography>\n        <TableContainer>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Original Part</TableCell>\n                <TableCell>New Part</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {Object.keys(report.partsReplaced).map(key => {\n                return (\n                  <TableRow key={key}>\n                    <TableCell>\n                      {key.includes(\"newPart\") ? \"--\" : key}\n                    </TableCell>\n                    <TableCell>{report.partsReplaced[key]}</TableCell>\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </ExpansionPanelDetails>\n    </ExpansionPanel>\n  );\n};\n","import React from \"react\";\nimport {\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Box\n} from \"@material-ui/core\";\nimport \"./HistoryTable.css\";\nimport moment from \"moment\";\nimport { wordCapitalization } from \"../../scripts/wordManipulation.js\";\n\nconst processEntry = (val, key) => {\n  if (key === \"hours\") {\n    return val;\n  }\n\n  if (moment(val).isValid()) {\n    return moment(val).format(\"D MMM YYYY\");\n  }\n\n  if (!val) {\n    return \"--\";\n  }\n  return wordCapitalization(val);\n};\n\nexport const HistoryTable = ({ objArray, mapping, large=false }) => {\n  return (\n    <div>\n      <Typography variant={large ? \"h6\" : \"body\"}>History:</Typography>\n      <Box px={1} pb={1}>\n        <TableContainer>\n          <Table size=\"small\">\n            <TableHead>\n              <TableRow>\n                {Object.values(mapping).map(heading => (\n                  <TableCell key={heading}>{heading}</TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {objArray.map((row, index) => (\n                <TableRow key={index}>\n                  {Object.keys(mapping).map(key => {\n                    return (\n                      <TableCell key={key}>\n                        {processEntry(row[key], key)}\n                      </TableCell>\n                    );\n                  })}\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Box>\n    </div>\n  );\n};\n","import React from \"react\";\nimport {\n  Typography,\n  ExpansionPanel,\n  ExpansionPanelSummary,\n  ExpansionPanelDetails,\n  CircularProgress\n} from \"@material-ui/core\";\nimport \"./PartProvenance.css\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { getPart } from \"../../scripts/hyperledger.js\";\nimport { ProgressBar } from \"../../components/ProgressBar/ProgressBar\";\nimport { HistoryTable } from \"../../components/HistoryTable/HistoryTable\";\n\nexport const PartProvenance = ({ parts, refresh }) => {\n  const [partData, setPartData] = React.useState([]);\n  const [loading, setLoading] = React.useState(false);\n\n  React.useEffect(() => {\n    if (parts.join(\"\") === \"demoPart\") {\n      setPartData([\n        {\n          description: { id: \"demoPart\", name: \"Offline demo part\" },\n          totalHours: 100,\n          maximumHours: 3000,\n          history: [\n            {\n              tailNumber: \"G-ZBJG\",\n              hours: 100,\n              onDate: new Date(),\n              offDate: null\n            }\n          ]\n        }\n      ]);\n    } else {\n      setLoading(true);\n      getPart(parts.join(\",\")).then(data => {\n        setPartData(data);\n        setLoading(false);\n      });\n    }\n  }, [parts, refresh]);\n\n  return (\n    <React.Fragment>\n      {loading && (\n        <div className=\"part-loading-container\">\n          <CircularProgress />\n        </div>\n      )}\n      {partData !== undefined &&\n        partData.map((part, index) => (\n          <ExpansionPanel key={index}>\n            <ExpansionPanelSummary\n              expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel1a-content\"\n              id=\"panel1a-header\"\n            >\n              {part.description && (\n                <React.Fragment>\n                  <div className=\"div-spacing\">\n                    <Typography>{part.description.id}</Typography>\n                  </div>\n                  <Typography className=\"expansion-secondLabel\">\n                    {part.description.name}\n                  </Typography>\n                </React.Fragment>\n              )}\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails className=\"expansionPanel-center\">\n              {part.history && (\n                <React.Fragment>\n                  <ProgressBar\n                    start={0}\n                    end={part.maximumHours}\n                    current={part.totalHours}\n                    label={`Current Aircraft: ${part.history[part.history.length - 1].tailNumber}`}\n                  />\n                  <HistoryTable\n                    objArray={part.history}\n                    mapping={{\n                      tailNumber: \"Aircraft\",\n                      hours: \"Hours\",\n                      onDate: \"On Date\",\n                      offDate: \"Off Date\"\n                    }}\n                  />\n                </React.Fragment>\n              )}\n            </ExpansionPanelDetails>\n          </ExpansionPanel>\n        ))}\n    </React.Fragment>\n  );\n};\n","import React from \"react\";\nimport { Fab, Box } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport BuildIcon from \"@material-ui/icons/Build\";\nimport UpdateIcon from \"@material-ui/icons/Update\";\nimport AirplanemodeActiveIcon from \"@material-ui/icons/AirplanemodeActive\";\nimport AirplanemodeInactiveIcon from \"@material-ui/icons/AirplanemodeInactive\";\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\nimport \"./FabButton.css\";\n\nexport const FabButton = ({ popUp, admin, setMenu }) => {\n  const [toggle, setToggle] = React.useState(false);\n  const [vis, setVis] = React.useState(false);\n  let options = [];\n\n  if (admin) {\n    options = [\n      { label: \"Register Aircraft\", icon: AirplanemodeActiveIcon },\n      { label: \"Assign Maintainer\", icon: PersonAddIcon },\n      { label: \"Sell Aircraft\", icon: AirplanemodeInactiveIcon }\n    ];\n  } else {\n    options = [\n      { label: \"Update Hours\", icon: UpdateIcon },\n      { label: \"Report Maintenance\", icon: BuildIcon },\n      { label: \"New Part\", icon: SettingsIcon }\n    ];\n  }\n\n  const closeHandle = event => {\n    if (event.relatedTarget === null) {\n      setToggle(false);\n      setTimeout(() => setVis(false), 750);\n    }\n  };\n\n  const openHandle = () => {\n    if (!toggle) {\n      setVis(true);\n      setToggle(true);\n    } else {\n      closeHandle({ relatedTarget: null });\n    }\n  };\n  return (\n    <div className=\"fab\" onBlur={closeHandle}>\n      <div className={`options-container ${vis ? \"visible\" : \"\"}`}>\n        {options.map((option, index) => {\n          const IconObj = option.icon;\n          const clickHandle = () => {\n            popUp.set(true);\n            closeHandle({ relatedTarget: null });\n            setMenu(option.label)\n          };\n          return (\n            <Box\n              mb={1}\n              key={option.label}\n              className={`option ${toggle ? \"show\" : \"\"}`}\n              style={{ transitionDelay: `${0.1 * index}s` }}\n            >\n              <Fab variant=\"extended\" onClick={clickHandle}>\n                <IconObj className=\"extended-icon\" />\n                {option.label}\n              </Fab>\n            </Box>\n          );\n        })}\n      </div>\n      <Fab color=\"primary\" aria-label=\"add\" onClick={openHandle}>\n        <AddIcon className={`button-main ${toggle ? \"open\" : \"\"}`} />\n      </Fab>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Dialog, DialogTitle } from \"@material-ui/core\";\n\nexport const PopUp = ({ popState, title, children }) => {\n  const handleClose = () => {\n    popState.set(false);\n  };\n\n  return (\n    <Dialog\n      open={popState.open}\n      onClose={handleClose}\n      aria-labelledby=\"form-dialog-title\"\n    >\n      <DialogTitle id=\"form-dialog-title\">{title}</DialogTitle>\n      {children}\n    </Dialog>\n  );\n};\n\nexport default PopUp;\n","import React from \"react\";\nimport {\n  Button,\n  DialogActions,\n  DialogContent,\n  DialogContentText\n} from \"@material-ui/core\";\nimport { TextInput } from \"../TextInput/TextInput\";\nimport \"./styles.css\";\nimport { wordCapitalization } from \"../../scripts/wordManipulation\";\nimport { callAPI } from \"../../scripts/hyperledger.js\";\n\nexport const RegisterAircraft = ({ popState, current, trigger }) => {\n  const [data, setData] = React.useState({\n    aircraft: \"\",\n    tailNumber: \"\",\n    company: current.owner.slice(-1)[0].company,\n    image: \"\"\n  });\n  const [submitted, setSubmitted] = React.useState(false);\n\n  const handleCancel = () => {\n    setData({\n      aircraft: \"\",\n      tailNumber: \"\",\n      company: \"\",\n      image: \"\"\n    });\n    popState.set(false);\n  };\n\n  const handleSubmit = async () => {\n    setSubmitted(true);\n    const res = await callAPI(\"aircraft\", \"POST\", data);\n    console.log(res);\n    setSubmitted(false);\n    trigger(res);\n    if (res) {\n      handleCancel();\n    }\n  };\n\n  const handleChange = event => {\n    const eventInfo = event.target;\n    // console.log(event.target);\n    setData(prev => {\n      return { ...prev, [eventInfo.id]: eventInfo.value };\n    });\n  };\n\n  return (\n    <React.Fragment>\n      <DialogContent className=\"form-box\">\n        <DialogContentText>\n          Register a new aircraft to be tracked in the Hyperledger Fabric\n          blockchain network.\n        </DialogContentText>\n        <TextInput\n          label=\"Aircraft Name\"\n          id=\"aircraft\"\n          onChange={handleChange}\n          value={data.aircraft}\n          disabled={submitted}\n        />\n        <TextInput\n          label=\"Tail Number\"\n          id=\"tailNumber\"\n          onChange={handleChange}\n          value={data.tailNumber}\n          disabled={submitted}\n        />\n        <TextInput label=\"Company\" value={wordCapitalization(data.company)} />\n        <TextInput\n          label=\"Image URL\"\n          id=\"image\"\n          onChange={handleChange}\n          value={data.image}\n          disabled={submitted}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button\n          variant=\"contained\"\n          onClick={handleCancel}\n          color=\"primary\"\n          disabled={submitted}\n        >\n          Cancel\n        </Button>\n        <Button\n          variant=\"contained\"\n          onClick={handleSubmit}\n          color=\"primary\"\n          disabled={Object.values(data).some(val => !val) || submitted}\n        >\n          Submit\n        </Button>\n      </DialogActions>\n    </React.Fragment>\n  );\n};\n\nexport default RegisterAircraft;\n","import React from \"react\";\nimport {\n  Button,\n  DialogActions,\n  DialogContent,\n  DialogContentText\n} from \"@material-ui/core\";\nimport { TextInput } from \"../TextInput/TextInput\";\nimport \"./styles.css\";\nimport { wordCapitalization } from \"../../scripts/wordManipulation\";\nimport { AutoCompleteText } from \"../AutoCompleteText/AutoCompleteText\";\nimport { callAPI, getMaintainers } from \"../../scripts/hyperledger.js\";\n\nexport const AssignMaintainer = ({ popState, current, trigger }) => {\n  const [data, setData] = React.useState({\n    tailNumber: current.description.tailNumber,\n    company: current.owner.slice(-1)[0].company,\n    username: \"\"\n  });\n  const [maintainers, setMaintainers] = React.useState([]);\n  const [submitted, setSubmitted] = React.useState(false);\n\n  React.useEffect(() => {\n    getMaintainers().then(res => setMaintainers(res));\n  }, []);\n\n  const handleCancel = () => {\n    setData({\n      tailNumber: \"\",\n      company: \"\",\n      username: \"\"\n    });\n    popState.set(false);\n  };\n\n  const handleSubmit = async () => {\n    setSubmitted(true);\n    const res = await callAPI(\"admin\", \"POST\", data);\n    console.log(res);\n    setSubmitted(false);\n    trigger(res);\n    if (res) {\n      handleCancel();\n    }\n  };\n\n  const autocompleteOnChange = (event, handler, key, obj) => {\n    let value = event.target.value;\n    // console.log(value);\n    if (typeof value === \"number\") {\n      value = event.target.innerText;\n    }\n    handler(prev => {\n      return { ...prev, [key]: value || \"\" };\n    });\n  };\n\n  return (\n    <React.Fragment>\n      <DialogContent className=\"form-box\">\n        <DialogContentText>\n          Assign a maintainer to have access to the corresponding aircraft.\n        </DialogContentText>\n        <TextInput\n          label=\"Tail Number\"\n          id=\"tailNumber\"\n          value={data.tailNumber}\n          disabled={submitted}\n        />\n        <TextInput\n          label=\"Company\"\n          value={wordCapitalization(data.company)}\n          disabled={submitted}\n        />\n        <AutoCompleteText\n          options={maintainers}\n          optionLabel={maintainer => maintainer}\n          label=\"Maintainer Username\"\n          onInputChange={event => {\n            autocompleteOnChange(event, setData, \"username\", maintainers);\n          }}\n          disabled={submitted}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button\n          variant=\"contained\"\n          onClick={handleCancel}\n          color=\"primary\"\n          disabled={submitted}\n        >\n          Cancel\n        </Button>\n        <Button\n          variant=\"contained\"\n          onClick={handleSubmit}\n          color=\"primary\"\n          disabled={Object.values(data).some(val => !val) || submitted}\n        >\n          Submit\n        </Button>\n      </DialogActions>\n    </React.Fragment>\n  );\n};\n\nexport default AssignMaintainer;\n","import React from \"react\";\nimport {\n  Button,\n  DialogActions,\n  DialogContent,\n  DialogContentText\n} from \"@material-ui/core\";\nimport { TextInput } from \"../TextInput/TextInput\";\nimport \"./styles.css\";\nimport { callAPI } from \"../../scripts/hyperledger.js\";\n\nexport const NewPart = ({ popState, current, trigger }) => {\n  const [data, setData] = React.useState({\n    id: \"\",\n    name: \"\",\n    maximumHours: \"\"\n  });\n  const [submitted, setSubmitted] = React.useState(false);\n\n  const handleCancel = () => {\n    setData({\n      id: \"\",\n      name: \"\",\n      maximumHours: \"\"\n    });\n    popState.set(false);\n  };\n\n  const handleSubmit = async () => {\n    const obj = {\n      description: { id: data.id, name:data.name },\n      maximumHours: data.maximumHours\n    };\n    setSubmitted(true);\n    const res = await callAPI(\"part\", \"POST\", obj);\n    console.log(res);\n    setSubmitted(false);\n    trigger(res);\n    if (res) {\n      handleCancel();\n    }\n  };\n\n  const handleChange = event => {\n    const eventInfo = event.target;\n    eventInfo.value =\n      eventInfo.id === \"maximumHours\" &&\n      Number(eventInfo.value) < 0 &&\n      eventInfo.value !== \"\"\n        ? 0\n        : eventInfo.value;\n    setData(prev => {\n      return { ...prev, [eventInfo.id]: eventInfo.value };\n    });\n  };\n\n  return (\n    <React.Fragment>\n      <DialogContent className=\"form-box\">\n        <DialogContentText>\n          Register a new part to be tracked in the Hyperledger Fabric blockchain\n          network.\n        </DialogContentText>\n        <TextInput\n          label=\"Part ID\"\n          id=\"id\"\n          value={data.id}\n          onChange={handleChange}\n          disabled={submitted}\n        />\n        <TextInput\n          label=\"Short Description\"\n          id=\"name\"\n          value={data.name}\n          onChange={handleChange}\n          disabled={submitted}\n        />\n        <TextInput\n          type=\"number\"\n          label=\"Maximum Flight Hours\"\n          value={data.maximumHours}\n          id=\"maximumHours\"\n          onChange={handleChange}\n          disabled={submitted}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button\n          variant=\"contained\"\n          onClick={handleCancel}\n          color=\"primary\"\n          disabled={submitted}\n        >\n          Cancel\n        </Button>\n        <Button\n          variant=\"contained\"\n          onClick={handleSubmit}\n          color=\"primary\"\n          disabled={\n            data.maximumHours <= 0 ||\n            Object.values(data).some(val => !val) ||\n            submitted\n          }\n        >\n          Submit\n        </Button>\n      </DialogActions>\n    </React.Fragment>\n  );\n};\n\nexport default NewPart;\n","import React from \"react\";\nimport {\n  Box,\n  Button,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  TextareaAutosize,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  InputBase\n} from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { TextInput } from \"../TextInput/TextInput\";\nimport \"./styles.css\";\nimport { AutoCompleteText } from \"../AutoCompleteText/AutoCompleteText\";\nimport { wordCapitalization } from \"../../scripts/wordManipulation.js\";\nimport { callAPI } from \"../../scripts/hyperledger.js\";\nconst crypto = require(\"crypto\");\n\nexport const ReportMaintenance = ({ popState, current, trigger }) => {\n  const [data, setData] = React.useState({\n    tailNumber: current.description.tailNumber,\n    type: \"\",\n    notes: \"\"\n  });\n  const types = [\"general\", \"A\", \"B\", \"C\", \"D\"];\n  const [partData, setPartData] = React.useState({});\n  const [submitted, setSubmitted] = React.useState(false);\n\n  React.useEffect(() => {\n    let temp = {};\n    current.partsList.forEach(part => {\n      temp[part] = \"\";\n    });\n    updateParts(temp);\n  }, [current.partsList]);\n\n  const updateParts = data => {\n    setPartData(prev => {\n      return { ...prev, ...data };\n    });\n  };\n\n  const newPart = () => {\n    const id = crypto.randomBytes(5).toString(\"hex\");\n    const temp = { [`newPart${id}`]: \"\" };\n    updateParts(temp);\n  };\n\n  const handleSubmit = async () => {\n    const filteredParts = partData;\n    //remove key-value pairs of unchanged parts\n    Object.keys(filteredParts).forEach(part => {\n      if (partData[part] === \"\") {\n        delete filteredParts[part];\n      }\n    });\n    const obj = {\n      ...data,\n      replacedParts: filteredParts\n    };\n    setSubmitted(true);\n    const res = await callAPI(\"aircraft\", \"PATCH\", obj);\n    console.log(res);\n    setSubmitted(false);\n    trigger(res);\n    if (res) {\n      handleCancel();\n    }\n  };\n\n  const handleCancel = () => {\n    setData({\n      tailNumber: \"\",\n      type: \"\",\n      notes: \"\"\n    });\n    popState.set(false);\n  };\n\n  const handleChange = event => {\n    const eventInfo = event.target;\n    // console.log(event.target);\n    setData(prev => {\n      return { ...prev, [eventInfo.id]: eventInfo.value };\n    });\n  };\n\n  const handlePartChange = event => {\n    const eventInfo = event.target;\n    updateParts({ [eventInfo.id]: eventInfo.value });\n  };\n\n  const autocompleteOnChange = (event, handler, key, obj) => {\n    let value = event.target.value;\n    // console.log(value);\n    if (typeof value === \"number\") {\n      value = event.target.innerText;\n    }\n    handler(prev => {\n      return { ...prev, [key]: value || \"\" };\n    });\n  };\n\n  return (\n    <React.Fragment>\n      <DialogContent className=\"form-box\">\n        <DialogContentText>\n          Input data for a maintenance report to be stored with the aircraft.\n        </DialogContentText>\n        <TextInput\n          label=\"Tail Number\"\n          id=\"tailNumber\"\n          value={data.tailNumber}\n          disabled={submitted}\n        />\n        <AutoCompleteText\n          options={types}\n          optionLabel={wordCapitalization}\n          label=\"Maintenance Type\"\n          onInputChange={event => {\n            autocompleteOnChange(event, setData, \"type\", types);\n          }}\n          disabled={submitted}\n        />\n        <TextareaAutosize\n          placeholder=\"Notes\"\n          rowsMin={5}\n          rowsMax={5}\n          id=\"notes\"\n          onChange={handleChange}\n          className=\"textArea\"\n          disabled={submitted}\n        />\n        <Box my={1} className=\"textArea\">\n          <TableContainer className=\"table-container\">\n            <Table size=\"small\" stickyHeader>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Current Part ID</TableCell>\n                  <TableCell>New Part ID</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {Object.keys(partData).map(oldPart => (\n                  <TableRow key={oldPart}>\n                    <TableCell>\n                      {oldPart.includes(\"newPart\") ? \"--\" : oldPart}\n                    </TableCell>\n                    <TableCell>\n                      <Box className=\"part-input-box\">\n                        <InputBase\n                          placeholder=\"Part ID\"\n                          id={oldPart}\n                          value={partData[oldPart]}\n                          onChange={handlePartChange}\n                          disabled={submitted}\n                        />\n                      </Box>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Box>\n        <Button\n          variant=\"outlined\"\n          onClick={newPart}\n          startIcon={<AddIcon />}\n          disabled={submitted}\n        >\n          Add Item\n        </Button>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          variant=\"contained\"\n          onClick={handleCancel}\n          color=\"primary\"\n          disabled={submitted}\n        >\n          Cancel\n        </Button>\n        <Button\n          variant=\"contained\"\n          onClick={handleSubmit}\n          color=\"primary\"\n          disabled={Object.values(data).some(val => !val) || submitted}\n        >\n          Submit\n        </Button>\n      </DialogActions>\n    </React.Fragment>\n  );\n};\n\nexport default ReportMaintenance;\n","import React from \"react\";\nimport {\n  Button,\n  DialogActions,\n  DialogContent,\n  DialogContentText\n} from \"@material-ui/core\";\nimport { TextInput } from \"../TextInput/TextInput\";\nimport \"./styles.css\";\nimport { AutoCompleteText } from \"../AutoCompleteText/AutoCompleteText\";\nimport { wordCapitalization } from \"../../scripts/wordManipulation.js\";\nimport { callAPI } from \"../../scripts/hyperledger.js\";\n\nexport const SellAircraft = ({ popState, current, companies, trigger }) => {\n  const [data, setData] = React.useState({\n    tailNumber: current.description.tailNumber,\n    company: \"\"\n  });\n  const [submitted, setSubmitted] = React.useState(false);\n  const handleCancel = () => {\n    setData({\n      tailNumber: \"\",\n      company: \"\"\n    });\n    popState.set(false);\n  };\n\n  const companyList = companies.list.filter(\n    company => company !== current.owner.slice(-1)[0].company\n  );\n\n  const handleSubmit = async () => {\n    setSubmitted(true);\n    const res = await callAPI(\"admin\", \"PATCH\", data);\n    console.log(res);\n    setSubmitted(false);\n    trigger(res);\n    if (res) {\n      handleCancel();\n    }\n  };\n\n  const autocompleteOnChange = (event, handler, key, obj) => {\n    let value = event.target.value;\n    // console.log(value);\n    if (typeof value === \"number\") {\n      value = event.target.innerText.toLowerCase();\n    }\n    handler(prev => {\n      return { ...prev, [key]: value || \"\" };\n    });\n  };\n\n  return (\n    <React.Fragment>\n      <DialogContent className=\"form-box\">\n        <DialogContentText>\n          Sell the corresponding aircraft to another company.\n        </DialogContentText>\n        <TextInput\n          label=\"Tail Number\"\n          id=\"tailNumber\"\n          value={data.tailNumber}\n          disabled={submitted}\n        />\n        <AutoCompleteText\n          options={companyList}\n          optionLabel={wordCapitalization}\n          label=\"Company\"\n          onInputChange={event => {\n            autocompleteOnChange(event, setData, \"company\", companyList);\n          }}\n          disabled={submitted}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button\n          variant=\"contained\"\n          onClick={handleCancel}\n          color=\"primary\"\n          disabled={submitted}\n        >\n          Cancel\n        </Button>\n        <Button\n          variant=\"contained\"\n          onClick={handleSubmit}\n          color=\"primary\"\n          disabled={Object.values(data).some(val => !val) || submitted}\n        >\n          Submit\n        </Button>\n      </DialogActions>\n    </React.Fragment>\n  );\n};\n\nexport default SellAircraft;\n","import React from \"react\";\nimport {\n  Button,\n  DialogActions,\n  DialogContent,\n  DialogContentText\n} from \"@material-ui/core\";\nimport { TextInput } from \"../TextInput/TextInput\";\nimport \"./styles.css\";\nimport { callAPI } from \"../../scripts/hyperledger.js\";\n\nexport const UpdateHours = ({ popState, current, trigger }) => {\n  const [data, setData] = React.useState({\n    tailNumber: current.description.tailNumber,\n    hours: \"\"\n  });\n  const [submitted, setSubmitted] = React.useState(false);\n  const handleCancel = () => {\n    setData({\n      tailNumber: \"\",\n      hours: \"\"\n    });\n    popState.set(false);\n  };\n\n  const handleSubmit = async () => {\n    setSubmitted(true);\n    const res = await callAPI(\"flight\", \"POST\", data);\n    console.log(res);\n    setSubmitted(false);\n    trigger(res);\n    if (res) {\n      handleCancel();\n    }\n  };\n\n  const handleChange = event => {\n    const eventInfo = event.target;\n    const output =\n      Number(eventInfo.value) < 0 && eventInfo.value !== \"\"\n        ? 0\n        : eventInfo.value;\n    setData(prev => {\n      return { ...prev, [eventInfo.id]: output };\n    });\n  };\n\n  return (\n    <React.Fragment>\n      <DialogContent className=\"form-box\">\n        <DialogContentText>\n          Update the flight hours for an aircraft and its corresponding parts.\n        </DialogContentText>\n        <TextInput\n          label=\"Tail Number\"\n          id=\"tailNumber\"\n          value={data.tailNumber}\n          disabled={submitted}\n        />\n        <TextInput\n          type=\"number\"\n          label=\"Flight Hours\"\n          value={data.hours}\n          id=\"hours\"\n          onChange={handleChange}\n          disabled={submitted}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button\n          variant=\"contained\"\n          onClick={handleCancel}\n          color=\"primary\"\n          disabled={submitted}\n        >\n          Cancel\n        </Button>\n        <Button\n          variant=\"contained\"\n          onClick={handleSubmit}\n          color=\"primary\"\n          disabled={data.hours <= 0 || Object.values(data).some(val => !val) || submitted}\n        >\n          Submit\n        </Button>\n      </DialogActions>\n    </React.Fragment>\n  );\n};\n\nexport default UpdateHours;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Tabs,\n  Tab,\n  Typography,\n  Box,\n  AppBar,\n  Snackbar,\n  CircularProgress,\n  IconButton\n} from \"@material-ui/core\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { ProgressBar } from \"../../components/ProgressBar/ProgressBar\";\nimport \"./Aircraft.css\";\nimport { wordCapitalization } from \"../../scripts/wordManipulation.js\";\nimport moment from \"moment\";\nimport { getAircraft } from \"../../scripts/hyperledger.js\";\nimport { MaintenanceRecordPanel } from \"../../components/MaintenanceRecordPanel/MaintenanceRecordPanel\";\nimport { PartProvenance } from \"../../components/PartProvenance/PartProvenance\";\nimport { FabButton } from \"../../components/FabButton/FabButton\";\nimport { PopUp } from \"../../components/PopUp/PopUp\";\nimport { RegisterAircraft } from \"../../components/Forms/RegisterAircraft\";\nimport { AssignMaintainer } from \"../../components/Forms/AssignMaintainer\";\nimport { NewPart } from \"../../components/Forms/NewPart\";\nimport { ReportMaintenance } from \"../../components/Forms/ReportMaintenance\";\nimport { SellAircraft } from \"../../components/Forms/SellAircraft\";\nimport { UpdateHours } from \"../../components/Forms/UpdateHours\";\nimport { HistoryTable } from \"../../components/HistoryTable/HistoryTable\";\n\n//from: https://material-ui.com/components/tabs/\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`vertical-tabpanel-${index}`}\n      aria-labelledby={`vertical-tab-${index}`}\n      className=\"detailContainer\"\n      {...other}\n    >\n      {value === index && (\n        <Box p={3} className=\"detailContainer-box\">\n          {children}\n        </Box>\n      )}\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `vertical-tab-${index}`,\n    \"aria-controls\": `vertical-tabpanel-${index}`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  tabs: {\n    borderRight: `1px solid ${theme.palette.divider}`,\n    color: theme.palette.text.main,\n    minWidth: \"15%\"\n  }\n}));\n\nconst TabWrapper = ({ condition, children }) =>\n  condition ? (\n    children\n  ) : (\n    <AppBar position=\"static\" color=\"transparent\">\n      {children}\n    </AppBar>\n  );\n\nconst menuComponent = {\n  AssignMaintainer,\n  ReportMaintenance,\n  NewPart,\n  RegisterAircraft,\n  SellAircraft,\n  UpdateHours\n};\n\nexport const Aircraft = ({ connected, userData, companies }) => {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n  const [isMobile, setIsMobile] = React.useState(false);\n  const [data, setData] = React.useState([]);\n  const [open, set] = React.useState(false);\n  const popUp = { open, set };\n  const [menu, setMenu] = React.useState(\"\");\n  const [snackbarOpen, setSnackbarOpen] = React.useState(false);\n  const [transaction, setTransaction] = React.useState(null);\n  const [refresh, setRefresh] = React.useState(true);\n  const [loading, setLoading] = React.useState(false);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  //handle snackbar close\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setSnackbarOpen(false); //close snackbar\n    setTimeout(() => setTransaction(null), 100); //reset transaction status after a few seconds\n  };\n\n  //called when api call is returned\n  const transactionResponse = res => {\n    setSnackbarOpen(true); //open snackbar\n    setTransaction(res); //set transaction status\n    if (res) {\n      //if transaction is successful, force refresh data\n      setRefresh(prev => !prev);\n    }\n  };\n\n  //window size listener\n  React.useEffect(() => {\n    function handleResize() {\n      if (window.innerWidth <= 600 && !isMobile) {\n        setIsMobile(true);\n      } else if (window.innerWidth > 600 && isMobile) {\n        setIsMobile(false);\n      }\n    }\n    handleResize();\n    window.addEventListener(\"resize\", handleResize);\n    return _ => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, [isMobile]);\n\n  //getting data depending on connected or not (offline data)\n  React.useEffect(() => {\n    if (!connected) {\n      const maintTypes = [\"A\", \"B\", \"C\", \"D\"];\n      setData(\n        new Array(20).fill({\n          description: {\n            aircraft: \"Boeing 787-8 Dreamliner\",\n            tailNumber: \"G-ZBJG\",\n            image: \"https://cdn.jetphotos.com/full/6/27290_1582395615.jpg\"\n          },\n          maintenanceSchedule: maintTypes.map(type => {\n            return {\n              type: type,\n              lastCompletedDate: new Date(),\n              lastCompletedHours: Math.round(Math.random() * 100),\n              maxHours: 250\n            };\n          }),\n          flightHours: Math.round(Math.random() * 250),\n          owner: [\n            {\n              company: \"british airways\",\n              purchaseDate: new Date(),\n              soldDate: null\n            }\n          ],\n          partsList: [\"demoPart\"],\n          maintainers: [],\n          maintenanceReports: new Array(2).fill({\n            date: new Date(),\n            type: \"General\",\n            notes: \"Test maintenance report\",\n            partsReplaced: JSON.stringify({\n              newPart: \"test part\",\n              \"testing part\": \"testing parts\"\n            })\n          })\n        })\n      );\n    } else {\n      setLoading(true);\n      getAircraft(userData.info.aircraft.join(\",\"))\n        .then(res => {\n          setData(res);\n          console.log(res);\n          setLoading(false);\n        })\n        .catch(e => {\n          console.log(e);\n          setData([]);\n        });\n    }\n  }, [connected, userData.info.aircraft, refresh]);\n\n  //popup menu component (get from object)\n  const MenuComponent = menuComponent[menu.split(\" \").join(\"\")];\n\n  return (\n    <div\n      className={`mainContainer ${\n        !isMobile ? \"horizontalOrient\" : \"verticalOrient\"\n      }`}\n    >\n      <TabWrapper condition={!isMobile}>\n        <Tabs\n          orientation={!isMobile ? \"vertical\" : \"horizontal\"}\n          variant=\"scrollable\"\n          value={value}\n          onChange={handleChange}\n          className={classes.tabs}\n        >\n          {data !== undefined &&\n            data.map((obj, index) => (\n              <Tab\n                label={obj.description.tailNumber}\n                key={`plane${index}`}\n                {...a11yProps(index)}\n              />\n            ))}\n        </Tabs>\n      </TabWrapper>\n      {data !== undefined && loading === false ? (\n        data.map((obj, index) => {\n          // console.log(obj);\n          return (\n            <TabPanel value={value} index={index} key={`aircraft${index}`}>\n              <Box className=\"panel-header-details\">\n                <Typography variant=\"h2\">{obj.description.aircraft}</Typography>\n                <Typography variant=\"h6\">{`Tail Number: ${obj.description.tailNumber}`}</Typography>\n                <Typography variant=\"h6\">{`Company: ${wordCapitalization(\n                  obj.owner[obj.owner.length - 1].company\n                )}`}</Typography>\n                <Typography variant=\"h6\">{`Flight Hours: ${obj.flightHours}`}</Typography>\n                <HistoryTable\n                  objArray={obj.owner}\n                  mapping={{\n                    company: \"Company\",\n                    purchaseDate: \"Purchase Date\",\n                    soldDate: \"Sold Date\"\n                  }}\n                  large={true}\n                />\n              </Box>\n              <Box className=\"panel-header-image\">\n                <img\n                  src={obj.description.image}\n                  alt={`${obj.description.aircraft} ${obj.description.tailNumber}`}\n                />\n              </Box>\n              <Box my={1} className=\"panel-content\">\n                <Typography variant=\"h5\">Maintenance Checks</Typography>\n                <Box pt={1}>\n                  {obj.maintenanceSchedule.map(maintenance => {\n                    return (\n                      <ProgressBar\n                        start={maintenance.lastCompletedHours}\n                        end={\n                          maintenance.lastCompletedHours + maintenance.maxHours\n                        }\n                        current={obj.flightHours}\n                        label={`${maintenance.type} Check - Last Completed: ${\n                          moment(maintenance.lastCompletedDate).isValid()\n                            ? moment(maintenance.lastCompletedDate).format(\n                                \"D MMM YYYY\"\n                              )\n                            : \"N/A\"\n                        }`}\n                        key={maintenance.type}\n                      />\n                    );\n                  })}\n                </Box>\n              </Box>\n              <Box my={1} className=\"panel-content\">\n                <Typography variant=\"h5\">Parts Provenance</Typography>\n                <Box pt={1}>\n                  {obj.partsList.length > 0 && (\n                    <PartProvenance parts={obj.partsList} refresh={refresh} />\n                  )}\n                </Box>\n              </Box>\n              <Box my={1} className=\"panel-content\">\n                <Typography variant=\"h5\">Maintenance Reports</Typography>\n                {obj.maintenanceReports.length > 0 && (\n                  <Box pt={1}>\n                    {obj.maintenanceReports.map((report, index) => (\n                      <MaintenanceRecordPanel report={report} key={index} />\n                    ))}\n                  </Box>\n                )}\n              </Box>\n            </TabPanel>\n          );\n        })\n      ) : (\n        <div className=\"loading-refresh-container\">\n          {loading ? (\n            <CircularProgress />\n          ) : (\n            <IconButton onClick={() => setRefresh(prev => !prev)}>\n              <RefreshIcon style={{ fontSize: 50 }} />\n            </IconButton>\n          )}\n        </div>\n      )}\n      <FabButton\n        admin={userData.info.type === \"administrator\"}\n        popUp={popUp}\n        setMenu={setMenu}\n      />\n      <PopUp popState={popUp} title={menu}>\n        {menu && (\n          <MenuComponent\n            popState={popUp}\n            current={data[value]}\n            companies={companies}\n            trigger={transactionResponse}\n          />\n        )}\n      </PopUp>\n      <Snackbar\n        open={snackbarOpen}\n        autoHideDuration={6000}\n        onClose={handleClose}\n      >\n        <MuiAlert\n          elevation={6}\n          variant=\"filled\"\n          onClose={handleClose}\n          severity={transaction ? \"success\" : \"error\"}\n        >\n          {transaction ? \"Transaction successful\" : \"Transaction failed\"}\n        </MuiAlert>\n      </Snackbar>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { NavigationBar } from \"./components/NavigationBar/NavigationBar\";\nimport { Login } from \"./container/Login/Login\";\nimport { Aircraft } from \"./container/Aircraft/Aircraft\";\nimport { getCompanies } from \"./scripts/hyperledger.js\";\n\nfunction App() {\n  const [connected, setConnected] = React.useState(false);\n  const [list, setList] = React.useState([]);\n  const companies = { list, setList };\n  const [info, setInfo] = React.useState({});\n  const user = { info, setInfo };\n\n  React.useEffect(() => {\n    getCompanies()\n      .then(res => {\n        console.log(res);\n        setList(res);\n        setConnected(true);\n      })\n      .catch(e => {\n        console.log(e);\n        setConnected(false);\n        setList([\"air canada\", \"KLM\", \"united\", \"delta\"]); //offline data for demo purposes\n      });\n  }, []);\n\n  return (\n    <React.Fragment>\n      <NavigationBar connected={connected} />\n      <Switch>\n        <Route path=\"/aircraft\">\n          {Object.keys(info).length === 0 ? (\n            <Redirect to=\"/\" />\n          ) : (\n            <Aircraft connected={connected} userData={user} companies={companies}/>\n          )}\n        </Route>\n        <Route path=\"/\">\n          <Login connected={connected} companies={companies} userData={user} />\n        </Route>\n      </Switch>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\n\nconst darkTheme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n    text: {\n      main: \"#fff\",\n    }\n  },\n  overrides: {\n    MuiFormLabel: {\n      root: {\n        \"&$focused\": {\n          color: \"white\"\n        }\n      }\n    },\n    MuiTooltip: {\n      tooltip: {\n        fontSize: \"1em\",\n      }\n    }\n  }\n});\n\nReactDOM.render(\n  <ThemeProvider theme={darkTheme}>\n    <Router basename=\"/\">\n      <App />\n    </Router>\n  </ThemeProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}