{"version":3,"sources":["components/NavigationBar/NavigationBar.js","components/LoginCard/LoginCard.js","components/TextInput/TextInput.js","components/AutoCompleteText/AutoCompleteText.js","container/Login/Login.js","components/ProgressBar/ProgressBar.js","container/Aircraft/Aircraft.js","App.js","serviceWorker.js","index.js"],"names":["NavigationBar","connected","AppBar","position","Toolbar","fontSize","Typography","variant","className","Box","px","Button","color","Tooltip","title","LoginCard","heading","onClick","disabled","buttonText","children","mt","mx","Card","raised","CardHeader","CardContent","CardActions","fullWidth","TextInput","props","my","TextField","AutoCompleteText","options","optionLabel","freeSolo","onInputChange","id","Autocomplete","getOptionLabel","renderInput","params","Login","React","useState","companies","setCompanies","roles","username","password","userPass","setUserPass","verified","role","company","newUser","setNewUser","validate","setValidate","useEffect","onChangeUserPass","event","key","target","value","prev","onChangeNew","replace","autocompleteOnChange","handler","obj","innerText","toLowerCase","console","log","Object","values","every","val","label","onChange","type","onBlur","error","helperText","option","ProgressBar","start","end","current","setValue","setTimeout","Math","min","pr","LinearProgress","classes","root","TabPanel","index","other","component","hidden","aria-labelledby","p","useStyles","makeStyles","theme","tabs","borderRight","palette","divider","text","main","minWidth","TabWrapper","condition","Aircraft","isMobile","setIsMobile","data","setData","handleResize","window","innerWidth","addEventListener","_","removeEventListener","Array","fill","aircraft","tailNumber","image","Tabs","orientation","newValue","map","Tab","a11yProps","m","src","alt","round","random","App","setConnected","Fragment","path","Boolean","location","hostname","match","darkTheme","createMuiTheme","overrides","MuiFormLabel","ReactDOM","render","ThemeProvider","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.f6862429.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  Button,\n  Box,\n  Tooltip\n} from \"@material-ui/core\";\nimport FlightTakeoffIcon from \"@material-ui/icons/FlightTakeoff\";\nimport RssFeedIcon from \"@material-ui/icons/RssFeed\";\nimport \"./NavigationBar.css\";\n\nexport const NavigationBar = ({connected}) => {\n  return (\n    <AppBar position=\"sticky\">\n      <Toolbar>\n        <FlightTakeoffIcon fontSize=\"large\" />\n        <Typography variant=\"h6\" className=\"heading-web\">\n          Airline MRO + Hyperledger Fabric\n        </Typography>\n        <Typography variant=\"h6\" className=\"heading-mobile\">\n          Airline MRO\n        </Typography>\n        <Box px={2}>\n          <Button color=\"inherit\">Login</Button>\n        </Box>\n        <Tooltip title={connected ? \"Network Connected\" : \"Not Connected\"}>\n          <RssFeedIcon color={connected ? \"inherit\" : \"secondary\"} />\n        </Tooltip>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default NavigationBar;\n","import React from \"react\";\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  CardActions,\n  Button,\n  Box\n} from \"@material-ui/core\";\nimport \"./LoginCard.css\";\n\nexport const LoginCard = ({\n  heading,\n  onClick,\n  disabled,\n  buttonText,\n  children\n}) => {\n  return (\n    <Box mt={6} mx={5} className=\"loginCard-container\">\n      <Card raised={true} className=\"loginCard-card\">\n        <CardHeader title={heading} className=\"loginCard-center\" />\n        <CardContent className=\"loginCard-content loginCard-center\">{children}</CardContent>\n        <CardActions className=\"loginCard-center\">\n          <Button\n            fullWidth={true}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={onClick}\n            disabled={disabled}\n          >\n            {buttonText}\n          </Button>\n        </CardActions>\n      </Card>\n    </Box>\n  );\n};\n\nexport default LoginCard;\n","import React from \"react\";\nimport { TextField, Box } from \"@material-ui/core\";\nimport \"./TextInput.css\";\n\nexport const TextInput = ({ ...props }) => {\n  return (\n    <Box my={1} className=\"boxWidth\">\n      <TextField {...props} variant=\"outlined\" fullWidth={true}/>\n    </Box>\n  );\n};\n","import React from \"react\";\nimport { TextInput } from \"../TextInput/TextInput\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport \"./AutoCompleteText.css\"\n\nexport const AutoCompleteText = ({\n  options,\n  optionLabel,\n  freeSolo = false,\n  onInputChange,\n  id,\n  ...props\n}) => {\n  return (\n    <Autocomplete\n      options={options}\n      getOptionLabel={optionLabel}\n      freeSolo={freeSolo}\n      onInputChange={onInputChange}\n      className=\"autoCompleteContainer\"\n      renderInput={params => <TextInput {...params} {...props} />}\n    />\n  );\n};\n","import React from \"react\";\nimport \"./Login.css\";\nimport { LoginCard } from \"../../components/LoginCard/LoginCard\";\nimport { TextInput } from \"../../components/TextInput/TextInput\";\nimport { AutoCompleteText } from \"../../components/AutoCompleteText/AutoCompleteText\";\n\nexport const Login = () => {\n  const [companies, setCompanies] = React.useState([]);\n  const roles = [\"Administrator\", \"Maintainer\"];\n  const [userPass, setUserPass] = React.useState({\n    username: \"\",\n    password: \"\"\n  });\n\n  const [newUser, setNewUser] = React.useState({\n    username: \"\",\n    password: \"\",\n    verified: \"\",\n    role: \"\",\n    company: \"\"\n  });\n  const [validate, setValidate] = React.useState(false);\n\n  React.useEffect(() => {\n    setCompanies([\"Delta\", \"Air Canada\", \"KLM\"]);\n  }, []);\n\n  const loginHandle = () => {\n    console.log(\"login click\");\n  };\n\n  const registerHandle = () => {\n    console.log(\"register click\");\n  };\n\n  const onChangeUserPass = event => {\n    const key = event.target.id;\n    const value = event.target.value;\n    setUserPass(prev => {\n      return { ...prev, [key]: value };\n    });\n  };\n\n  const onChangeNew = event => {\n    const key = event.target.id.replace(\"New\", \"\");\n    const value = event.target.value;\n    setNewUser(prev => {\n      return { ...prev, [key]: value };\n    });\n  };\n\n  const autocompleteOnChange = (event, handler, key, obj) => {\n    let value = event.target.value;\n    if (typeof value === \"number\") {\n      value = event.target.innerText.toLowerCase();\n    }\n    handler(prev => {\n      return { ...prev, [key]: value || \"\"};\n    });\n  }\n\n  const validatePassword = () => {\n    setValidate(newUser.password !== newUser.verified);\n  };\n\n  return (\n    <div className=\"login-container\">\n      <LoginCard\n        heading=\"User Login\"\n        onClick={loginHandle}\n        disabled={!Object.values(userPass).every(val => !!val)}\n        buttonText=\"Login\"\n      >\n        <TextInput label=\"Username\" onChange={onChangeUserPass} id=\"username\" />\n        <TextInput\n          label=\"Password\"\n          type=\"password\"\n          onChange={onChangeUserPass}\n          id=\"password\"\n        />\n      </LoginCard>\n      <LoginCard\n        heading=\"Register New User\"\n        onClick={registerHandle}\n        disabled={!Object.values(newUser).every(val => !!val)}\n        buttonText=\"Register\"\n      >\n        <TextInput label=\"Username\" onChange={onChangeNew} id=\"usernameNew\" />\n        <TextInput\n          label=\"Password\"\n          type=\"password\"\n          onChange={onChangeNew}\n          id=\"passwordNew\"\n        />\n        <TextInput\n          label=\"Confirm password\"\n          type=\"password\"\n          onChange={event => {\n            if (validate) {\n              setValidate(false);\n            }\n            onChangeNew(event);\n          }}\n          id=\"verified\"\n          disabled={!newUser.password}\n          onBlur={validatePassword}\n          error={validate}\n          helperText={validate ? \"passwords do not match\" : \"\"}\n        />\n        <AutoCompleteText\n          options={roles}\n          optionLabel={option => option}\n          label=\"Role\"\n          onInputChange={event => {\n            autocompleteOnChange(event, setNewUser, \"role\", roles)\n          }}\n        />\n        <AutoCompleteText\n          options={companies}\n          optionLabel={option => option}\n          label=\"Company\"\n          freeSolo={newUser.role === \"administrator\"}\n          onInputChange={event => {\n            autocompleteOnChange(event, setNewUser, \"company\", companies)\n          }}\n        />\n      </LoginCard>\n    </div>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport { Box, LinearProgress, Typography } from \"@material-ui/core\";\nimport \"./ProgressBar.css\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport ErrorOutlineIcon from \"@material-ui/icons/ErrorOutline\";\n\nexport const ProgressBar = ({ start, end, current, label }) => {\n  const [value, setValue] = React.useState(0);\n\n  setTimeout(() => {\n    setValue(Math.min(((current - start) / (end - start)) * 100, 100));\n  }, 1000);\n\n  return (\n    <Box className=\"bar-container\">\n      <Box pr={2} className=\"bar-label\">\n        <Typography>{label}</Typography>\n      </Box>\n      <CheckCircleIcon\n        color={value < 75 ? \"primary\" : \"secondary\"}\n        fontSize=\"large\"\n      />\n      <LinearProgress\n        color={value < 75 ? \"primary\" : \"secondary\"}\n        variant=\"determinate\"\n        value={value}\n        classes={{ root: \"bar-indicator\" }}\n      />\n      {value < 95 ? (\n        <ErrorOutlineIcon color=\"disabled\" fontSize=\"large\" />\n      ) : (\n        <ErrorIcon color=\"secondary\" fontSize=\"large\" />\n      )}\n    </Box>\n  );\n};\n\n// \"action\",\"disabled\",\"error\",\"inherit\",\"primary\",\"secondary\"\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Tabs, Tab, Typography, Box, AppBar} from \"@material-ui/core\";\nimport {ProgressBar} from \"../../components/ProgressBar/ProgressBar\";\nimport \"./Aircraft.css\";\n\n//from: https://material-ui.com/components/tabs/\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`vertical-tabpanel-${index}`}\n      aria-labelledby={`vertical-tab-${index}`}\n      className=\"detailContainer\"\n      {...other}\n    >\n      {value === index && <Box p={3} className=\"detailContainer-box\">{children}</Box>}\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `vertical-tab-${index}`,\n    \"aria-controls\": `vertical-tabpanel-${index}`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  tabs: {\n    borderRight: `1px solid ${theme.palette.divider}`,\n    color: theme.palette.text.main,\n    minWidth: \"15%\"\n  }\n}));\n\nconst TabWrapper = ({ condition, children }) =>\n  condition ? (\n    children\n  ) : (\n    <AppBar position=\"static\" color=\"transparent\">\n      {children}\n    </AppBar>\n  );\n\nexport const Aircraft = () => {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n  const [isMobile, setIsMobile] = React.useState(false);\n  const [data, setData] = React.useState([]);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  React.useEffect(() => {\n    function handleResize() {\n      if (window.innerWidth <= 600 && !isMobile) {\n        setIsMobile(true);\n      } else if (window.innerWidth > 600 && isMobile) {\n        setIsMobile(false);\n      }\n    }\n    handleResize();\n    window.addEventListener(\"resize\", handleResize);\n    return _ => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, [isMobile]);\n\n  React.useEffect(() => {\n    setData(\n      new Array(20).fill({\n        aircraft: \"Boeing 787-8 Dreamliner\",\n        tailNumber: \"G-ZBJG\",\n        image: \"https://cdn.jetphotos.com/full/6/27290_1582395615.jpg\",\n        company: \"British Airways\"\n      })\n    );\n  }, []);\n\n  return (\n    <div\n      className={`mainContainer ${\n        !isMobile ? \"horizontalOrient\" : \"verticalOrient\"\n      }`}\n    >\n      <TabWrapper condition={!isMobile}>\n        <Tabs\n          orientation={!isMobile ? \"vertical\" : \"horizontal\"}\n          variant=\"scrollable\"\n          value={value}\n          onChange={handleChange}\n          className={classes.tabs}\n        >\n          {data.map((obj, index) => (\n            <Tab\n              label={`Plane ${index + 1}`}\n              key={`plane${index}`}\n              {...a11yProps(index)}\n            />\n          ))}\n        </Tabs>\n      </TabWrapper>\n      {data.map((obj, index) => (\n        <TabPanel value={value} index={index} key={`aircraft${index}`}>\n          <Box m={1} className=\"panel-header-details\">\n            <Typography variant=\"h2\">{obj.aircraft}</Typography>\n            <Typography variant=\"h6\">{`Tail Number: ${obj.tailNumber}`}</Typography>\n            <Typography variant=\"h6\">{`Company: ${obj.company} ${index+1}`}</Typography>\n          </Box>\n          <Box className=\"panel-header-image\">\n            <img src={obj.image} alt={`${obj.aircraft} ${obj.tailNumber}`}/>\n          </Box>\n          <Box my={1} className=\"panel-content\">\n            <Typography variant=\"h6\">Maintenance Checks</Typography>\n            <ProgressBar start={0} end={10} current={Math.round(Math.random()*10)} label={`A Check Due: ${\"date\"}`}/>\n            <ProgressBar start={0} end={10} current={Math.round(Math.random()*10)} label={`B Check Due: ${\"date\"}`}/>\n            <ProgressBar start={0} end={10} current={Math.round(Math.random()*10)} label={`C Check Due: ${\"date\"}`}/>\n            <ProgressBar start={0} end={10} current={Math.round(Math.random()*10)} label={`D Check Due: ${\"date\"}`}/>\n          </Box>\n          <Box my={1} className=\"panel-content\">\n            <Typography variant=\"h6\">Parts Provenance</Typography>\n          </Box>\n          <Box my={1} className=\"panel-content\">\n            <Typography variant=\"h6\">Maintenance Reports</Typography>\n          </Box>\n        </TabPanel>\n      ))}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { NavigationBar } from \"./components/NavigationBar/NavigationBar\";\nimport { Login } from \"./container/Login/Login\";\nimport { Aircraft } from \"./container/Aircraft/Aircraft\"\n\nfunction App() {\n  const [connected, setConnected] = React.useState(false);\n\n  React.useState(() => {\n    //check hyperledger status\n    setConnected(false);\n  });\n\n  return (\n    <React.Fragment>\n      <NavigationBar connected={connected} />\n      <Switch>\n        <Route path=\"/aircraft\">\n          <Aircraft />\n        </Route>\n        <Route path=\"/\">\n          <Login />\n        </Route>\n      </Switch>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\n\nconst darkTheme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n    text: {\n      main: \"#fff\",\n    }\n  },\n  overrides: {\n    MuiFormLabel: {\n      root: {\n        \"&$focused\": {\n          color: \"white\"\n        }\n      }\n    }\n  }\n});\n\nReactDOM.render(\n  <ThemeProvider theme={darkTheme}>\n    <Router basename=\"/\">\n      <App />\n    </Router>\n  </ThemeProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}